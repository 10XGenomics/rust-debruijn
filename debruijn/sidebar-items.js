initSidebarItems({"enum":[["Dir","Direction of motion in a DeBruijn graph"]],"fn":[["base_to_bits","Convert an ASCII-encoded DNA base to a 2-bit representation"],["bits_to_ascii","Convert a 2-bit representation of a base to a char"],["bits_to_base","Convert a 2-bit representation of a base to a char"],["complement","The complement of a 2-bit encoded base"]],"mod":[["dir","An enum that encodes a direction of motion in a De Bruijn graph."],["dna_string","A 2-bit encoding of arbitrary length DNA sequences."],["exts","A bitfield encoding the extensions that exist to the left and right of a kmer in a De Bruijn graph."],["filter","Methods for filtering observed kmers before De Bruijn graph construction, and summarizing 'color' annotations."],["kmer","Represent kmers with statically know length in compact integer types"],["msp","Methods for minimum substring partitioning of a DNA string"],["paths","Compute path-compressed De Bruijn graphs from kmers or intermediate sized De Bruijn graph fragments"],["vmer","Variable-length DNA strings packed into fixed-size structs."]],"struct":[["Exts","Store single-base extensions for a DNA Debruijn graph."],["KmerExtsIter","Iterate over the `(Kmer, Exts)` tuples of a sequence and it's extensions efficiently"],["KmerIter","Iterate over the `Kmer`s of a DNA sequence efficiently"]],"trait":[["Kmer","Encapsulates a Kmer sequence with statically known K."],["Mer","Generic trait for interacting with DNA seqeunces"],["MerImmut","An immutable interface to a Mer sequence."],["Vmer","A DNA sequence with run-time variable length, up to a statically known maximum length"]]});