initSidebarItems({"enum":[["Dir","Direction of motion in a DeBruijn graph"]],"fn":[["base_to_bits","Convert an ASCII-encoded DNA base to a 2-bit representation"],["bits_to_ascii","Convert a 2-bit representation of a base to a char"],["bits_to_base","Convert a 2-bit representation of a base to a char"],["complement","The complement of a 2-bit encoded base"],["is_valid_base","Convert an ASCII-encoded DNA base to a 2-bit representation"]],"mod":[["clean_graph","DeBruijn graph simplification routines. Currently tip-removal is implemented."],["compression","Create compressed DeBruijn graphs from uncompressed DeBruijn graphs, or a collection of disjoint DeBruijn graphs."],["dna_string","A 2-bit encoding of arbitrary length DNA sequences."],["filter","Methods for converting sequences into kmers, filtering observed kmers before De Bruijn graph construction, and summarizing 'color' annotations."],["graph","Containers for path-compressed De Bruijn graphs"],["kmer","Represent kmers with statically know length in compact integer types"],["msp","Methods for minimum substring partitioning of a DNA string"],["test","Generate random genomes (with lots of re-used sustrings), reassemble them, and check sanity"],["vmer","Variable-length DNA strings packed into fixed-size structs."]],"struct":[["DnaBytes","A newtype wrapper around a `Vec<u8>` with implementations "],["DnaSlice","A newtype wrapper around a `&[u8]` with implementations "],["Exts","Store single-base extensions for a DNA Debruijn graph."],["KmerExtsIter","Iterate over the `(Kmer, Exts)` tuples of a sequence and it's extensions efficiently"],["KmerIter","Iterate over the `Kmer`s of a DNA sequence efficiently"],["MerIter","Iterator over bases of a DNA sequence (bases will be unpacked into bytes)."]],"trait":[["Kmer","Encapsulates a Kmer sequence with statically known K."],["Mer","Trait for interacting with DNA sequences"],["MerImmut","An immutable interface to a Mer sequence."],["Vmer","A DNA sequence with run-time variable length, up to a statically known maximum length"]]});