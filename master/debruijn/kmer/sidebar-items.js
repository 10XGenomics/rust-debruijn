initSidebarItems({"struct":[["IntKmer","A Kmer sequence with a statically know K. K will fill the underlying integer type."],["K12","Marker trait for generating K=12 Kmers"],["K14","Marker trait for generating K=14 Kmers"],["K2","Marker trait for generating K=6 Kmers"],["K20","Marker trait for generating K=20 Kmers"],["K24","Marker trait for generating K=24 Kmers"],["K3","Marker trait for generating K=6 Kmers"],["K30","Marker trait for generating K=40 Kmers"],["K4","Marker trait for generating K=6 Kmers"],["K40","Marker trait for generating K=40 Kmers"],["K48","Marker struct for generating K=48 Kmers"],["K5","Marker trait for generating K=6 Kmers"],["K6","Marker trait for generating K=6 Kmers"],["VarIntKmer","A fixed-length Kmer sequence that may not fill the bits of T"]],"trait":[["IntHelp","Trait for specialized integer operations used in DeBruijn Graph"],["KmerSize","Helper trait for declaring the K value of a Kmer. Will be removed when const generics are available"]],"type":[["Kmer12","12-base kmer, backed by a single u32"],["Kmer14","14-base kmer, backed by a single u32"],["Kmer16","16-base kmer, backed by a single u32"],["Kmer2",""],["Kmer20","20-base kmer, backed by a single u64"],["Kmer24","24-base kmer, backed by a single u64"],["Kmer3",""],["Kmer30","30-base kmer, backed by a single u64"],["Kmer32","32-base kmer, backed by a single u64"],["Kmer4",""],["Kmer40","40-base kmer, backed by a single u128"],["Kmer48","48-base kmer, backed by a single u128"],["Kmer5",""],["Kmer6",""],["Kmer64","64-base kmer, backed by a single u128"],["Kmer8","8-base kmer, backed by a single u16"]]});