initSidebarItems({"fn":[["compress_graph","Perform path-compression on a (possibly partially compressed) DeBruijn graph"],["compress_kmers","Take a BoomHash Object and build a compressed DeBruijn graph."],["compress_kmers_with_hash","Take a BoomHash Object and build a compressed DeBruijn graph."]],"struct":[["ScmapCompress",""],["SimpleCompress","Simple implementation of `CompressionSpec` that lets you provide that data reduction function as a closure"]],"trait":[["CompressionSpec","Customize the path-compression process. Implementing this trait lets the user control how the per-kmer data (of type `D`) is summarized into a per-path summary data (of type `DS`). It also let's the user introduce new breaks into paths by inspecting in the per-kmer data of a proposed with `join_test_kmer` function."]]});