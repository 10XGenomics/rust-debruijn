var N=null,E="",T="t",U="u",searchIndex={};
var R=["debruijn","Convert an ASCII-encoded DNA base to a 2-bit representation","Convert a 2-bit representation of a base to a char","storage","Marker trait for generating K=40 Kmers","Marker trait for generating K=6 Kmers","top_mask","usize","bottom_mask","dna_string","dnastring","Create a DnaString corresponding to an ACGT-encoded str.","dnastringslice","to_string","Get slice containing the interval [`start`, `end`) of `self`","Get a `DnaStringSlice` containing `i`th sequence in the set","A compressed DeBruijn graph carrying auxiliary data on…","Iterator over nodes in a `DeBruijnGraph`","intoiterator","debruijngraph","option","iterator","Write the graph to GFA format","sequence","smallvec","mspinterval","A simple KmerSummarizer that only accepts kmers that are…","Remove extensions in valid_kmers that point to censored…","partialeq","compressionspec","Take a BoomHash Object and build a compressed DeBruijn…","basegraph","is_palindrome","from_bytes","Create a Kmer from the first K bytes of `bytes`, which…","from_dna_string","complement","result","to_owned","try_from","borrow_mut","try_into","type_id","clone_into","into_iter","borrow","typeid","par_bridge","iterbridge","debruijn::kmer","debruijn::dna_string","debruijn::graph","debruijn::vmer","debruijn::msp","debruijn::filter","debruijn::compression","debruijn::clean_graph","summarize","join_test","set_slice_mut","Get the letter at the given position.","set_mut","Set a slice of bases in the kmer, using the packed…","Return the reverse complement of this kmer","Set base at `pos` to 2-bit encoded base `val`","Set `nbases` positions in the sequence, starting at `pos`.…","Return a new object containing the reverse complement of…","from_u64","extend_left","extend_right","Shift the base v into the left end of the kmer","get_kmer","max_len","Get the kmer starting at position pos","Create a new sequence with length `len`, initialized to…","Maximum sequence length that can be stored in this type","Efficiently extract a Kmer from the sequence","intkmer","varintkmer","dnabytes","dnaslice","ordering","partial_cmp","formatter","serialize","deserialize","DnaBytes","DnaSlice","VarIntKmer","KmerSize","DnaStringSlice","PackedDnaStringSet","DnaString","BaseGraph","DebruijnGraph","NodeKmer","MspInterval","KmerSummarizer","CountFilter","CountFilterSet","CountFilterEqClass","CompressionSpec","SimpleCompress","ScmapCompress","CleanGraph","KmerExtsIter","DnaStringIter","NodeIntoIter","NodeKmerIter","debruijn: a De Bruijn graph library for DNA seqeunces in…","Iterator over bases of a DNA sequence (bases will be…","A newtype wrapper around a `Vec<u8>` with implementations ","A newtype wrapper around a `&[u8]` with implementations ","Store single-base extensions for a DNA Debruijn graph.","KmerIter","Iterate over the `Kmer`s of a DNA sequence efficiently","Iterate over the `(Kmer, Exts)` tuples of a sequence and…","Direction of motion in a DeBruijn graph","bits_to_ascii","base_to_bits","dna_only_base_to_bits","is_valid_base","bits_to_base","The complement of a 2-bit encoded base","Represent kmers with statically know length in compact…","A Kmer sequence with a statically know K. K will fill the…","A fixed-length Kmer sequence that may not fill the bits of T","Marker struct for generating K=48 Kmers","Marker trait for generating K=24 Kmers","Marker trait for generating K=20 Kmers","Marker trait for generating K=14 Kmers","Marker trait for generating K=12 Kmers","64-base kmer, backed by a single u128","48-base kmer, backed by a single u128","40-base kmer, backed by a single u128","32-base kmer, backed by a single u64","30-base kmer, backed by a single u64","24-base kmer, backed by a single u64","20-base kmer, backed by a single u64","16-base kmer, backed by a single u32","14-base kmer, backed by a single u32","12-base kmer, backed by a single u32","8-base kmer, backed by a single u16","Trait for specialized integer operations used in DeBruijn…","reverse_by_twos","Reverse the order of 2-bit units of the integer","Helper trait for declaring the K value of a Kmer. Will be…","A 2-bit encoding of arbitrary length DNA sequences.","A container for sequence of DNA bases.","Iterator over values of a DnaStringoded sequence (values…","An immutable slice into a DnaString","Container for many distinct sequences, concatenated into a…","Create an empty DNA string","Length of the sequence","with_capacity","Create a new instance with a given capacity.","Create a DnaString of length n initialized to all A's","from_dna_only_string","from_acgt_bytes","Create a DnaString from an ASCII ACGT-encoded byte slice.…","from_acgt_bytes_hashn","Create a DnaString from an ACGT-encoded byte slice, Non…","Create a DnaString from a 0-4 encoded byte slice","Convert sequence to a String","Convert sequence to a Vector of 0-4 encoded bytes","to_ascii_vec","Convert sequence to a Vector of ascii-encoded bytes","Append a 0-4 encoded base.","push_bytes","Push 0-4 encoded bases from a byte array.","Iterate over stored values (values will be unpacked into…","dnastringiter","Clear the sequence.","Get the length `k` prefix of the DnaString","Get the length `k` suffix of the DnaString","Create a fresh DnaString containing the reverse of `self`","to_dna_string","Create an empty `PackedDnaStringSet`","Number of sequences in the set","Containers for path-compressed De Bruijn graphs","sequences","NodeIter","Unbranched sequence in the DeBruijn graph","finish_serial","Total number of nodes in the DeBruijn graph","Get a node given it's `node_id`","iter_nodes","Return an iterator over all nodes in the graph","find_link","Find a link in the graph, possibly handling a RC switch.","is_compressed","Check whether the graph is fully compressed. Return `None`…","Remove non-existent extensions that may be created due to…","get_valid_exts","Find the highest-scoring, unambiguous path in the graph.…","sequence_of_path","Get the sequence of a path through the graph. The path is…","Write the graph to a dot file.","to_gfa_with_tags","to_json_rest","Write the graph to JSON","Print a text representation of the graph.","print_with_data","to_supernova_bv","max_path_beam","Length of the sequence of this node","Sequence of the node","Reference to auxiliarly data associated with the node","Extension bases from this node","Edges leaving the left side of the node in the format","Edges leaving the right side of the node in the format","Edges leaving the 'dir' side of the node in the format","Variable-length DNA strings packed into fixed-size structs.","Store a variable-length DNA sequence in a packed 2-bit…","Types that can be used as the backing store for a SmallVec","as_mut_slice","Methods for minimum substring partitioning of a DNA string","simple_scan","Determine MSP substrings of seq, for given k and p.…","msp_sequence","Methods for converting sequences into kmers, filtering…","filter_kmers","Process DNA sequences into kmers and determine the set of…","remove_censored_exts_sharded","remove_censored_exts","EqClassIdType","Implement this trait to control how multiple observations…","The input `items` is an iterator over kmer observations.…","Construct a `CountFilter` KmerSummarizer only accepts…","countfilter","Construct a `CountFilterSet` KmerSummarizer only accepts…","countfilterset","countfiltereqclass","get_eq_classes","get_number_of_eq_classes","fetch_add","compression","Create compressed DeBruijn graphs from uncompressed…","Simple implementation of `CompressionSpec` that lets you…","compress_graph","Perform path-compression on a (possibly partially…","compress_kmers_with_hash","boomhashmap2","compress_kmers","Customize the path-compression process. Implementing this…","simplecompress","scmapcompress","clean_graph","DeBruijn graph simplification routines. Currently…","cleangraph","find_bad_nodes","Generate random genomes (with lots of re-used sustrings),…","random_base","debruijn::test","Generate a uniformly random base","random_dna","Generate uniformly random DNA sequences","Randomly mutate each base with probability `p`","random_kmer","random_vmer","simple_random_contigs","random_contigs","Trait for interacting with DNA sequences","Length of DNA sequence","Get 2-bit encoded base at position `pos`","Iterate over the bases in the sequence","Encapsulates a Kmer sequence with statically known K.","Create a Kmer initialized to all A's","K value for this concrete type.","Return the rank of this kmer in an lexicographic ordering…","Add the base `v` to the left side of the sequence, and…","Add the base `v` to the right side of the sequence, and…","Add the base `v` to the side of sequence given by `dir`,…","get_extensions","Generate all the extension of this sequence given by…","min_rc_flip","Return the minimum of the kmer and it's reverse…","Test if this Kmer and it's reverse complement are the same","from_ascii","Return String containing Kmer sequence","kmers_from_bytes","Generate vector of all kmers contained in `str` encoded as…","kmers_from_ascii","Generate vector of all kmers contained in `str`, encoded…","MerImmut","An immutable interface to a Mer sequence.","set_slice","A DNA sequence with run-time variable length, up to a…","from_slice","Create a Vmer from a sequence of bytes","first_kmer","Get the first Kmer from the sequence","last_kmer","Get the last kmer in the sequence","both_term_kmer","Get the terminal kmer of the sequence, on the both side of…","term_kmer","Get the terminal kmer of the sequence, on the side of the…","iter_kmers","Iterate over the kmers in the sequence","iter_kmer_exts","Iterate over the kmers and their extensions, given the…","kmerextsiter","Return a fresh Dir with the opposite direction","cond_flip","Return a fresh Dir opposite direction if do_flip == True","Pick between two alternatives, depending on the direction","from_single_dirs","from_slice_bounds","num_exts_l","num_exts_r","num_ext_dir","get_unique_extension","single_dir","Complement the extension bases for each direction","Get the value at position `i`.","Set the value as position `i`.","Get the base at position `i`.","Set the base as position `i`.","The length of the DNA string","Get the base at position pos","Return a new Lmer with position pos set to base val","Initialize an blank Lmer of length len. Will initially…","packeddnastringset","size_hint","Provide a 'fast-forward' capability for this iterator MPHF…"];
searchIndex[R[0]]={"doc":R[109],"i":[[3,"MerIter",R[0],R[110],N,N],[3,R[86],E,R[111],N,N],[12,"0",E,E,0,N],[3,R[87],E,R[112],N,N],[12,"0",E,E,1,N],[3,"Exts",E,R[113],N,N],[12,"val",E,E,2,N],[3,R[114],E,R[115],N,N],[3,R[105],E,R[116],N,N],[4,"Dir",E,R[117],N,N],[13,"Left",E,E,3,N],[13,"Right",E,E,3,N],[5,R[118],E,R[2],N,[[["u8"]],["u8"]]],[5,R[119],E,R[1],N,[[["u8"]],["u8"]]],[5,R[120],E,E,N,[[["u8"]],[["u8"],[R[20],["u8"]]]]],[5,R[121],E,R[1],N,[[["u8"]],["bool"]]],[5,R[122],E,R[2],N,[[["u8"]],["char"]]],[5,R[36],E,R[123],N,[[["u8"]],["u8"]]],[0,"kmer",E,R[124],N,N],[3,"IntKmer",R[49],R[125],N,N],[12,R[3],E,E,4,N],[3,R[88],E,R[126],N,N],[12,R[3],E,E,5,N],[12,"phantom",E,E,5,N],[3,"K48",E,R[127],N,N],[3,"K40",E,R[4],N,N],[3,"K31",E,"Marker trait for generating K=31 Kmers",N,N],[3,"K30",E,"Marker trait for generating K=30 Kmers",N,N],[3,"K24",E,R[128],N,N],[3,"K20",E,R[129],N,N],[3,"K14",E,R[130],N,N],[3,"K12",E,R[131],N,N],[3,"K6",E,R[5],N,N],[3,"K5",E,R[5],N,N],[3,"K4",E,R[5],N,N],[3,"K3",E,R[5],N,N],[3,"K2",E,R[5],N,N],[6,"Kmer64",E,R[132],N,N],[6,"Kmer48",E,R[133],N,N],[6,"Kmer40",E,R[134],N,N],[6,"Kmer32",E,R[135],N,N],[6,"Kmer30",E,R[136],N,N],[6,"Kmer24",E,R[137],N,N],[6,"Kmer20",E,R[138],N,N],[6,"Kmer16",E,R[139],N,N],[6,"Kmer14",E,R[140],N,N],[6,"Kmer12",E,R[141],N,N],[6,"Kmer8",E,R[142],N,N],[6,"Kmer6",E,E,N,N],[6,"Kmer5",E,E,N,N],[6,"Kmer4",E,E,N,N],[6,"Kmer3",E,E,N,N],[6,"Kmer2",E,E,N,N],[8,"IntHelp",E,R[143],N,N],[10,R[144],E,R[145],6,[[["self"]],["self"]]],[8,R[89],E,R[146],N,N],[10,"K",E,E,7,[[],[R[7]]]],[11,R[6],E,E,4,[[[R[7]]],[T]]],[11,R[8],E,E,4,[[[R[7]]],[T]]],[11,R[6],E,E,5,[[[R[7]]],[T]]],[11,R[8],E,E,5,[[[R[7]]],[T]]],[0,R[9],R[0],R[147],N,N],[3,R[92],R[50],R[148],N,N],[3,R[106],E,R[149],N,N],[3,R[90],E,R[150],N,N],[12,R[9],E,E,8,N],[12,"start",E,E,8,N],[12,"length",E,E,8,N],[12,"is_rc",E,E,8,N],[3,R[91],E,R[151],N,N],[12,R[23],E,E,9,N],[12,"start",E,E,9,N],[12,"length",E,E,9,N],[11,"new",E,R[152],10,[[],[R[10]]]],[11,"len",E,R[153],10,[[["self"]],[R[7]]]],[11,R[154],E,R[155],10,[[[R[7]]],["self"]]],[11,"blank",E,R[156],10,[[[R[7]]],["self"]]],[11,R[35],E,R[11],10,[[["str"]],[R[10]]]],[11,R[157],E,R[11],10,[[["str"]],[[R[10]],["vec",[R[10]]]]]],[11,R[158],E,R[159],10,[[],[R[10]]]],[11,R[160],E,R[161],10,[[],[R[10]]]],[11,R[33],E,R[162],10,[[],[R[10]]]],[11,R[13],E,R[163],10,[[["self"]],["string"]]],[11,"to_bytes",E,R[164],10,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[165],E,R[166],10,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"push",E,R[167],10,[[["self"],["u8"]]]],[11,R[168],E,R[169],10,[[["self"],["vec"],[R[7]]]]],[11,"iter",E,R[170],10,[[["self"]],[R[171]]]],[11,"clear",E,R[172],10,[[["self"]]]],[11,"is_empty",E,E,10,[[["self"]],["bool"]]],[11,"prefix",E,R[173],10,[[["self"],[R[7]]],[R[12]]]],[11,"suffix",E,R[174],10,[[["self"],[R[7]]],[R[12]]]],[11,"slice",E,R[14],10,[[["self"],[R[7]]],[R[12]]]],[11,"reverse",E,R[175],10,[[["self"]],[R[10]]]],[11,R[32],E,E,8,[[["self"]],["bool"]]],[11,"bytes",E,E,8,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"ascii",E,E,8,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[176],E,E,8,[[["self"]],["string"]]],[11,R[13],E,E,8,[[["self"]],["string"]]],[11,R[38],E,E,8,[[["self"]],[R[10]]]],[11,"slice",E,R[14],8,[[["self"],[R[7]]],[R[12]]]],[11,"new",E,R[177],9,[[],["self"]]],[11,"get",E,R[15],9,[[["self"],[R[7]]],[R[12]]]],[11,"slice",E,R[15],9,[[["self"],[R[7]]],[R[12]]]],[11,"len",E,R[178],9,[[["self"]],[R[7]]]],[11,"add",E,E,9,[[["self"],[R[18]]]]],[0,"graph",R[0],R[179],N,N],[3,R[93],R[51],R[16],N,N],[12,R[180],E,E,11,N],[12,"exts",E,E,11,N],[12,"data",E,E,11,N],[12,"stranded",E,E,11,N],[3,R[94],E,R[16],N,N],[12,"base",E,E,12,N],[3,R[181],E,R[17],N,N],[3,R[107],E,R[17],N,N],[3,R[95],E,R[17],N,N],[12,"node_id",E,E,13,N],[3,R[108],E,E,N,N],[3,"Node",E,R[182],N,N],[12,"node_id",E,E,14,N],[12,"graph",E,E,14,N],[11,"new",E,E,11,[[["bool"]],["self"]]],[11,"len",E,E,11,[[["self"]],[R[7]]]],[11,"combine",E,E,11,[[[R[21]]],["self"]]],[11,"add",E,E,11,[[["exts"],["self"],[R[18]],["d"]]]],[11,"finish",E,E,11,[[],[R[19]]]],[11,R[183],E,E,11,[[],[R[19]]]],[11,"len",E,R[184],12,[[["self"]],[R[7]]]],[11,"get_node",E,R[185],12,[[["self"],[R[7]]],["node"]]],[11,R[186],E,R[187],12,[[["self"]],["nodeiter"]]],[11,R[188],E,R[189],12,[[["dir"],["k"],["self"]],[R[20]]]],[11,R[190],E,R[191],12,[[["self"]],[R[20]]]],[11,"fix_exts",E,R[192],12,[[["bitset"],["self"],[R[20],["bitset"]]]]],[11,R[193],E,E,12,[[["bitset"],["self"],[R[7]],[R[20],["bitset"]]],["exts"]]],[11,"max_path",E,R[194],12,[[["self"],["f"],["f2"]],["vec"]]],[11,R[195],E,R[196],12,[[["self"],[R[21]]],[R[10]]]],[11,"to_dot",E,R[197],12,[[["path"],["asref",["path"]],["self"],["f"]]]],[11,"to_gfa",E,R[22],12,[[["path"],["asref",["path"]],["self"]],[[R[37],["error"]],["error"]]]],[11,"write_gfa",E,E,12,[[["self"]],[[R[37],["error"]],["error"]]]],[11,R[198],E,R[22],12,[[["path"],["fn"],["asref",["path"]],["self"]],[[R[37],["error"]],["error"]]]],[11,R[199],E,E,12,[[[R[20],["value"]],["value"],["self"],["w"],["fn"]]]],[11,"to_json",E,R[200],12,[[["self"],["w"],["fn"]]]],[11,"print",E,R[201],12,[[["self"]]]],[11,R[202],E,E,12,[[["self"]]]],[11,R[203],E,E,12,[[["self"],["write"]],[[R[37],["error"]],["error"]]]],[11,R[204],E,E,12,[[["self"],["f"],[R[7]],["f2"]],["vec"]]],[11,"len",E,R[205],14,[[["self"]],[R[7]]]],[11,R[23],E,R[206],14,[[["self"]],[R[12]]]],[11,"data",E,R[207],14,[[["self"]],["d"]]],[11,"exts",E,R[208],14,[[["self"]],["exts"]]],[11,"l_edges",E,R[209],14,[[["self"]],[R[24]]]],[11,"r_edges",E,R[210],14,[[["self"]],[R[24]]]],[11,"edges",E,R[211],14,[[["dir"],["self"]],[R[24]]]],[0,"vmer",R[0],R[212],N,N],[3,"Lmer",R[52],R[213],N,N],[6,"Lmer1",E,E,N,N],[6,"Lmer2",E,E,N,N],[6,"Lmer3",E,E,N,N],[8,"Array",E,R[214],N,N],[16,"Item",E,E,15,N],[10,"new",E,E,15,[[],["self"]]],[10,"size",E,E,15,[[],[R[7]]]],[10,"as_slice",E,E,15,[[["self"]]]],[10,R[215],E,E,15,[[["self"]]]],[0,"msp",R[0],R[216],N,N],[3,R[96],R[53],E,N,N],[5,R[217],E,R[218],N,[[["v"],["bool"],[R[7]]],[["vec",[R[25]]],[R[25]]]]],[5,R[219],E,E,N,[[["bool"],[R[7]],[R[20]]],["vec"]]],[11,"new",E,E,16,[[["u32"],["u16"]],[R[25]]]],[11,"start",E,E,16,[[["self"]],[R[7]]]],[11,"len",E,E,16,[[["self"]],[R[7]]]],[11,"end",E,E,16,[[["self"]],[R[7]]]],[11,"range",E,E,16,[[["self"]],[["range",[R[7]]],[R[7]]]]],[11,"bucket",E,E,16,[[["self"]],["u16"]]],[0,"filter",R[0],R[220],N,N],[3,R[98],R[54],R[26],N,N],[3,R[99],E,R[26],N,N],[3,R[100],E,E,N,N],[5,R[221],E,R[222],N,[[["deref"],["bool"],[R[7]]]]],[5,R[223],E,R[27],N,[[["vec"],["vec"],["bool"]]]],[5,R[224],E,R[27],N,[[["vec"],["bool"]]]],[6,R[225],E,E,N,N],[8,R[97],E,R[226],N,N],[10,R[57],E,R[227],17,[[[R[21]],["self"]]]],[11,"new",E,R[228],18,[[[R[7]]],[R[229]]]],[11,"new",E,R[230],19,[[[R[7]]],[R[231]]]],[11,"new",E,E,20,[[[R[7]]],[R[232]]]],[11,R[233],E,E,20,[[["self"]],[["vec",["vec"]],["vec"]]]],[11,R[234],E,E,20,[[["self"]],[R[7]]]],[11,R[235],E,E,20,[[["self"]],[R[7]]]],[0,R[236],R[0],R[237],N,N],[3,R[102],R[55],R[238],N,N],[3,R[103],E,E,N,N],[5,R[239],E,R[240],N,[[[R[29]],[R[28]],["debug"],["vec",[R[7]]],[R[20],["vec"]],["send"],["sync"],["clone"],["bool"],[R[19]],["kmer"]],[[R[28]],["debug"],["send"],["sync"],["clone"],[R[19]],["kmer"]]]],[5,R[241],E,R[30],N,[[[R[29]],["debug"],[R[242]],["clone"],["bool"]],[["debug"],["clone"],[R[31]],["kmer"]]]],[5,R[243],E,R[30],N,[[[R[29]],["vec"],["debug"],["clone"],["bool"]],[["debug"],["clone"],[R[31]],["kmer"]]]],[8,R[101],E,R[244],N,N],[10,"reduce",E,E,21,[[["d"],["self"],["d"]],["d"]]],[10,R[58],E,E,21,[[["d"],["self"]],["bool"]]],[11,"new",E,E,22,[[["f"]],[R[245]]]],[11,"new",E,E,23,[[],[R[246]]]],[0,R[247],R[0],R[248],N,N],[3,R[104],R[56],E,N,N],[11,"new",E,E,24,[[["t1"]],[R[249]]]],[11,R[250],E,E,24,[[[R[19]],["self"]],[["vec",[R[7]]],[R[7]]]]],[0,"test",R[0],R[251],N,N],[5,R[252],R[253],R[254],N,[[],["u8"]]],[5,R[255],E,R[256],N,[[[R[7]]],[["u8"],["vec",["u8"]]]]],[5,"edit_dna",E,R[257],N,[[["r"],["f64"],["vec"]]]],[5,R[258],E,E,N,[[],["kmer"]]],[5,R[259],E,E,N,[[],["vmer"]]],[5,R[260],E,E,N,[[],[["vec",["vec"]],["vec",["u8"]]]]],[5,R[261],E,E,N,[[],[["vec",["vec"]],["vec",["u8"]]]]],[8,"Mer",R[0],R[262],N,N],[10,"len",E,R[263],25,[[["self"]],[R[7]]]],[10,"get",E,R[264],25,[[["self"],[R[7]]],["u8"]]],[10,R[61],E,R[64],25,[[["self"],["u8"],[R[7]]]]],[10,R[59],E,R[65],25,[[["self"],["u64"],[R[7]]]]],[10,"rc",E,R[66],25,[[["self"]],["self"]]],[11,"iter",E,R[265],25,[[["self"]],["meriter"]]],[8,"Kmer",E,R[266],N,N],[10,"empty",E,R[267],26,[[],["self"]]],[10,"k",E,R[268],26,[[],[R[7]]]],[10,"to_u64",E,R[269],26,[[["self"]],["u64"]]],[10,R[67],E,E,26,[[["u64"]],["self"]]],[10,R[68],E,R[270],26,[[["u8"],["self"]],["self"]]],[10,R[69],E,R[271],26,[[["u8"],["self"]],["self"]]],[11,"extend",E,R[272],26,[[["dir"],["u8"],["self"]],["self"]]],[11,R[273],E,R[274],26,[[["dir"],["exts"],["self"]],["vec"]]],[11,R[275],E,R[276],26,[[["self"]]]],[11,"min_rc",E,E,26,[[["self"]],["self"]]],[11,R[32],E,R[277],26,[[["self"]],["bool"]]],[11,R[33],E,R[34],26,[[],["self"]]],[11,R[278],E,R[34],26,[[],["self"]]],[11,R[13],E,R[279],26,[[["self"]],["string"]]],[11,R[280],E,R[281],26,[[],["vec"]]],[11,R[282],E,R[283],26,[[],["vec"]]],[8,R[284],E,R[285],N,N],[11,"set",E,E,27,[[["u8"],["self"],[R[7]]],["self"]]],[11,R[286],E,E,27,[[["self"],["u64"],[R[7]]],["self"]]],[8,"Vmer",E,R[287],N,N],[10,"new",E,R[74],28,[[[R[7]]],["self"]]],[10,R[72],E,R[75],28,[[],[R[7]]]],[11,R[288],E,R[289],28,[[],["self"]]],[10,R[71],E,R[76],28,[[["self"],[R[7]]],["kmer"]]],[11,R[290],E,R[291],28,[[["self"]],["kmer"]]],[11,R[292],E,R[293],28,[[["self"]],["kmer"]]],[11,R[294],E,R[295],28,[[["self"]]]],[11,R[296],E,R[297],28,[[["dir"],["self"]],["kmer"]]],[11,R[298],E,R[299],28,[[["self"]],[["kmeriter"],["kmer"]]]],[11,R[300],E,R[301],28,[[["exts"],["self"]],[[R[302]],["kmer"]]]],[11,"flip",E,R[303],3,[[["self"]],["dir"]]],[11,R[304],E,R[305],3,[[["self"],["bool"]],["dir"]]],[11,"pick",E,R[306],3,[[["self"],[T]],[T]]],[11,"new",E,E,2,[[["u8"]],["self"]]],[11,"empty",E,E,2,[[],["exts"]]],[11,R[307],E,E,2,[[["exts"]],["exts"]]],[11,"merge",E,E,2,[[["exts"]],["exts"]]],[11,"add",E,E,2,[[["exts"],["self"]],["exts"]]],[11,"set",E,E,2,[[["dir"],["u8"],["self"]],["exts"]]],[11,"get",E,E,2,[[["dir"],["self"]],[["u8"],["vec",["u8"]]]]],[11,"has_ext",E,E,2,[[["dir"],["u8"],["self"]],["bool"]]],[11,R[308],E,E,2,[[[R[7]]],["exts"]]],[11,R[35],E,E,2,[[[R[10]],[R[7]]],["exts"]]],[11,R[309],E,E,2,[[["self"]],["u8"]]],[11,R[310],E,E,2,[[["self"]],["u8"]]],[11,R[311],E,E,2,[[["dir"],["self"]],["u8"]]],[11,"mk_left",E,E,2,[[["u8"]],["exts"]]],[11,"mk_right",E,E,2,[[["u8"]],["exts"]]],[11,"mk",E,E,2,[[["u8"]],["exts"]]],[11,R[312],E,E,2,[[["dir"],["self"]],[["u8"],[R[20],["u8"]]]]],[11,R[313],E,E,2,[[["dir"],["self"]],["exts"]]],[11,R[36],E,R[314],2,[[["self"]],["exts"]]],[11,"reverse",E,E,2,[[["self"]],["exts"]]],[11,"rc",E,E,2,[[["self"]],["exts"]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[44],E,E,29,[[],["i"]]],[11,"into",E,E,29,[[],[U]]],[11,R[39],E,E,29,[[[U]],[R[37]]]],[11,R[45],E,E,29,[[["self"]],[T]]],[11,R[42],E,E,29,[[["self"]],[R[46]]]],[11,R[40],E,E,29,[[["self"]],[T]]],[11,R[41],E,E,29,[[],[R[37]]]],[11,R[47],E,E,29,[[],[R[48]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[38],E,E,0,[[["self"]],[T]]],[11,R[43],E,E,0,[[[T],["self"]]]],[11,R[39],E,E,0,[[[U]],[R[37]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"]],[R[46]]]],[11,R[40],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[],[R[37]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[39],E,E,1,[[[U]],[R[37]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"]],[R[46]]]],[11,R[40],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[],[R[37]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[38],E,E,2,[[["self"]],[T]]],[11,R[43],E,E,2,[[[T],["self"]]]],[11,R[39],E,E,2,[[[U]],[R[37]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[42],E,E,2,[[["self"]],[R[46]]]],[11,R[40],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[],[R[37]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[44],E,E,30,[[],["i"]]],[11,"into",E,E,30,[[],[U]]],[11,R[39],E,E,30,[[[U]],[R[37]]]],[11,R[45],E,E,30,[[["self"]],[T]]],[11,R[42],E,E,30,[[["self"]],[R[46]]]],[11,R[40],E,E,30,[[["self"]],[T]]],[11,R[41],E,E,30,[[],[R[37]]]],[11,R[47],E,E,30,[[],[R[48]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[44],E,E,31,[[],["i"]]],[11,"into",E,E,31,[[],[U]]],[11,R[39],E,E,31,[[[U]],[R[37]]]],[11,R[45],E,E,31,[[["self"]],[T]]],[11,R[42],E,E,31,[[["self"]],[R[46]]]],[11,R[40],E,E,31,[[["self"]],[T]]],[11,R[41],E,E,31,[[],[R[37]]]],[11,R[47],E,E,31,[[],[R[48]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[38],E,E,3,[[["self"]],[T]]],[11,R[43],E,E,3,[[[T],["self"]]]],[11,R[39],E,E,3,[[[U]],[R[37]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[42],E,E,3,[[["self"]],[R[46]]]],[11,R[40],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[],[R[37]]]],[11,"from",R[49],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[38],E,E,4,[[["self"]],[T]]],[11,R[43],E,E,4,[[[T],["self"]]]],[11,R[39],E,E,4,[[[U]],[R[37]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[42],E,E,4,[[["self"]],[R[46]]]],[11,R[40],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[],[R[37]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[38],E,E,5,[[["self"]],[T]]],[11,R[43],E,E,5,[[[T],["self"]]]],[11,R[39],E,E,5,[[[U]],[R[37]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[42],E,E,5,[[["self"]],[R[46]]]],[11,R[40],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[],[R[37]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[38],E,E,32,[[["self"]],[T]]],[11,R[43],E,E,32,[[[T],["self"]]]],[11,R[39],E,E,32,[[[U]],[R[37]]]],[11,R[45],E,E,32,[[["self"]],[T]]],[11,R[42],E,E,32,[[["self"]],[R[46]]]],[11,R[40],E,E,32,[[["self"]],[T]]],[11,R[41],E,E,32,[[],[R[37]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[38],E,E,33,[[["self"]],[T]]],[11,R[43],E,E,33,[[[T],["self"]]]],[11,R[39],E,E,33,[[[U]],[R[37]]]],[11,R[45],E,E,33,[[["self"]],[T]]],[11,R[42],E,E,33,[[["self"]],[R[46]]]],[11,R[40],E,E,33,[[["self"]],[T]]],[11,R[41],E,E,33,[[],[R[37]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[38],E,E,34,[[["self"]],[T]]],[11,R[43],E,E,34,[[[T],["self"]]]],[11,R[39],E,E,34,[[[U]],[R[37]]]],[11,R[45],E,E,34,[[["self"]],[T]]],[11,R[42],E,E,34,[[["self"]],[R[46]]]],[11,R[40],E,E,34,[[["self"]],[T]]],[11,R[41],E,E,34,[[],[R[37]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[38],E,E,35,[[["self"]],[T]]],[11,R[43],E,E,35,[[[T],["self"]]]],[11,R[39],E,E,35,[[[U]],[R[37]]]],[11,R[45],E,E,35,[[["self"]],[T]]],[11,R[42],E,E,35,[[["self"]],[R[46]]]],[11,R[40],E,E,35,[[["self"]],[T]]],[11,R[41],E,E,35,[[],[R[37]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[38],E,E,36,[[["self"]],[T]]],[11,R[43],E,E,36,[[[T],["self"]]]],[11,R[39],E,E,36,[[[U]],[R[37]]]],[11,R[45],E,E,36,[[["self"]],[T]]],[11,R[42],E,E,36,[[["self"]],[R[46]]]],[11,R[40],E,E,36,[[["self"]],[T]]],[11,R[41],E,E,36,[[],[R[37]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[38],E,E,37,[[["self"]],[T]]],[11,R[43],E,E,37,[[[T],["self"]]]],[11,R[39],E,E,37,[[[U]],[R[37]]]],[11,R[45],E,E,37,[[["self"]],[T]]],[11,R[42],E,E,37,[[["self"]],[R[46]]]],[11,R[40],E,E,37,[[["self"]],[T]]],[11,R[41],E,E,37,[[],[R[37]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[38],E,E,38,[[["self"]],[T]]],[11,R[43],E,E,38,[[[T],["self"]]]],[11,R[39],E,E,38,[[[U]],[R[37]]]],[11,R[45],E,E,38,[[["self"]],[T]]],[11,R[42],E,E,38,[[["self"]],[R[46]]]],[11,R[40],E,E,38,[[["self"]],[T]]],[11,R[41],E,E,38,[[],[R[37]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[38],E,E,39,[[["self"]],[T]]],[11,R[43],E,E,39,[[[T],["self"]]]],[11,R[39],E,E,39,[[[U]],[R[37]]]],[11,R[45],E,E,39,[[["self"]],[T]]],[11,R[42],E,E,39,[[["self"]],[R[46]]]],[11,R[40],E,E,39,[[["self"]],[T]]],[11,R[41],E,E,39,[[],[R[37]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[38],E,E,40,[[["self"]],[T]]],[11,R[43],E,E,40,[[[T],["self"]]]],[11,R[39],E,E,40,[[[U]],[R[37]]]],[11,R[45],E,E,40,[[["self"]],[T]]],[11,R[42],E,E,40,[[["self"]],[R[46]]]],[11,R[40],E,E,40,[[["self"]],[T]]],[11,R[41],E,E,40,[[],[R[37]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[38],E,E,41,[[["self"]],[T]]],[11,R[43],E,E,41,[[[T],["self"]]]],[11,R[39],E,E,41,[[[U]],[R[37]]]],[11,R[45],E,E,41,[[["self"]],[T]]],[11,R[42],E,E,41,[[["self"]],[R[46]]]],[11,R[40],E,E,41,[[["self"]],[T]]],[11,R[41],E,E,41,[[],[R[37]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[38],E,E,42,[[["self"]],[T]]],[11,R[43],E,E,42,[[[T],["self"]]]],[11,R[39],E,E,42,[[[U]],[R[37]]]],[11,R[45],E,E,42,[[["self"]],[T]]],[11,R[42],E,E,42,[[["self"]],[R[46]]]],[11,R[40],E,E,42,[[["self"]],[T]]],[11,R[41],E,E,42,[[],[R[37]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[38],E,E,43,[[["self"]],[T]]],[11,R[43],E,E,43,[[[T],["self"]]]],[11,R[39],E,E,43,[[[U]],[R[37]]]],[11,R[45],E,E,43,[[["self"]],[T]]],[11,R[42],E,E,43,[[["self"]],[R[46]]]],[11,R[40],E,E,43,[[["self"]],[T]]],[11,R[41],E,E,43,[[],[R[37]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[38],E,E,44,[[["self"]],[T]]],[11,R[43],E,E,44,[[[T],["self"]]]],[11,R[39],E,E,44,[[[U]],[R[37]]]],[11,R[45],E,E,44,[[["self"]],[T]]],[11,R[42],E,E,44,[[["self"]],[R[46]]]],[11,R[40],E,E,44,[[["self"]],[T]]],[11,R[41],E,E,44,[[],[R[37]]]],[11,"from",R[50],E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[38],E,E,10,[[["self"]],[T]]],[11,R[43],E,E,10,[[[T],["self"]]]],[11,R[39],E,E,10,[[[U]],[R[37]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[42],E,E,10,[[["self"]],[R[46]]]],[11,R[40],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[],[R[37]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[44],E,E,45,[[],["i"]]],[11,"into",E,E,45,[[],[U]]],[11,R[39],E,E,45,[[[U]],[R[37]]]],[11,R[45],E,E,45,[[["self"]],[T]]],[11,R[42],E,E,45,[[["self"]],[R[46]]]],[11,R[40],E,E,45,[[["self"]],[T]]],[11,R[41],E,E,45,[[],[R[37]]]],[11,R[47],E,E,45,[[],[R[48]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[38],E,E,8,[[["self"]],[T]]],[11,R[43],E,E,8,[[[T],["self"]]]],[11,R[39],E,E,8,[[[U]],[R[37]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[42],E,E,8,[[["self"]],[R[46]]]],[11,R[40],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[],[R[37]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[38],E,E,9,[[["self"]],[T]]],[11,R[43],E,E,9,[[[T],["self"]]]],[11,R[39],E,E,9,[[[U]],[R[37]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[42],E,E,9,[[["self"]],[R[46]]]],[11,R[40],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[],[R[37]]]],[11,"from",R[51],E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[38],E,E,11,[[["self"]],[T]]],[11,R[43],E,E,11,[[[T],["self"]]]],[11,R[39],E,E,11,[[[U]],[R[37]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[42],E,E,11,[[["self"]],[R[46]]]],[11,R[40],E,E,11,[[["self"]],[T]]],[11,R[41],E,E,11,[[],[R[37]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[39],E,E,12,[[[U]],[R[37]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[42],E,E,12,[[["self"]],[R[46]]]],[11,R[40],E,E,12,[[["self"]],[T]]],[11,R[41],E,E,12,[[],[R[37]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[44],E,E,46,[[],["i"]]],[11,"into",E,E,46,[[],[U]]],[11,R[39],E,E,46,[[[U]],[R[37]]]],[11,R[45],E,E,46,[[["self"]],[T]]],[11,R[42],E,E,46,[[["self"]],[R[46]]]],[11,R[40],E,E,46,[[["self"]],[T]]],[11,R[41],E,E,46,[[],[R[37]]]],[11,R[47],E,E,46,[[],[R[48]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[44],E,E,47,[[],["i"]]],[11,"into",E,E,47,[[],[U]]],[11,R[39],E,E,47,[[[U]],[R[37]]]],[11,R[45],E,E,47,[[["self"]],[T]]],[11,R[42],E,E,47,[[["self"]],[R[46]]]],[11,R[40],E,E,47,[[["self"]],[T]]],[11,R[41],E,E,47,[[],[R[37]]]],[11,R[47],E,E,47,[[],[R[48]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[44],E,E,13,[[],["i"]]],[11,"into",E,E,13,[[],[U]]],[11,R[38],E,E,13,[[["self"]],[T]]],[11,R[43],E,E,13,[[[T],["self"]]]],[11,R[39],E,E,13,[[[U]],[R[37]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[42],E,E,13,[[["self"]],[R[46]]]],[11,R[40],E,E,13,[[["self"]],[T]]],[11,R[41],E,E,13,[[],[R[37]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[44],E,E,48,[[],["i"]]],[11,"into",E,E,48,[[],[U]]],[11,R[39],E,E,48,[[[U]],[R[37]]]],[11,R[45],E,E,48,[[["self"]],[T]]],[11,R[42],E,E,48,[[["self"]],[R[46]]]],[11,R[40],E,E,48,[[["self"]],[T]]],[11,R[41],E,E,48,[[],[R[37]]]],[11,R[47],E,E,48,[[],[R[48]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[39],E,E,14,[[[U]],[R[37]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[42],E,E,14,[[["self"]],[R[46]]]],[11,R[40],E,E,14,[[["self"]],[T]]],[11,R[41],E,E,14,[[],[R[37]]]],[11,"from",R[52],E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[38],E,E,49,[[["self"]],[T]]],[11,R[43],E,E,49,[[[T],["self"]]]],[11,R[39],E,E,49,[[[U]],[R[37]]]],[11,R[45],E,E,49,[[["self"]],[T]]],[11,R[42],E,E,49,[[["self"]],[R[46]]]],[11,R[40],E,E,49,[[["self"]],[T]]],[11,R[41],E,E,49,[[],[R[37]]]],[11,"from",R[53],E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[39],E,E,16,[[[U]],[R[37]]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[42],E,E,16,[[["self"]],[R[46]]]],[11,R[40],E,E,16,[[["self"]],[T]]],[11,R[41],E,E,16,[[],[R[37]]]],[11,"from",R[54],E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[39],E,E,18,[[[U]],[R[37]]]],[11,R[45],E,E,18,[[["self"]],[T]]],[11,R[42],E,E,18,[[["self"]],[R[46]]]],[11,R[40],E,E,18,[[["self"]],[T]]],[11,R[41],E,E,18,[[],[R[37]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[39],E,E,19,[[[U]],[R[37]]]],[11,R[45],E,E,19,[[["self"]],[T]]],[11,R[42],E,E,19,[[["self"]],[R[46]]]],[11,R[40],E,E,19,[[["self"]],[T]]],[11,R[41],E,E,19,[[],[R[37]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[39],E,E,20,[[[U]],[R[37]]]],[11,R[45],E,E,20,[[["self"]],[T]]],[11,R[42],E,E,20,[[["self"]],[R[46]]]],[11,R[40],E,E,20,[[["self"]],[T]]],[11,R[41],E,E,20,[[],[R[37]]]],[11,"from",R[55],E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[39],E,E,22,[[[U]],[R[37]]]],[11,R[45],E,E,22,[[["self"]],[T]]],[11,R[42],E,E,22,[[["self"]],[R[46]]]],[11,R[40],E,E,22,[[["self"]],[T]]],[11,R[41],E,E,22,[[],[R[37]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[39],E,E,23,[[[U]],[R[37]]]],[11,R[45],E,E,23,[[["self"]],[T]]],[11,R[42],E,E,23,[[["self"]],[R[46]]]],[11,R[40],E,E,23,[[["self"]],[T]]],[11,R[41],E,E,23,[[],[R[37]]]],[11,"from",R[56],E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[39],E,E,24,[[[U]],[R[37]]]],[11,R[45],E,E,24,[[["self"]],[T]]],[11,R[42],E,E,24,[[["self"]],[R[46]]]],[11,R[40],E,E,24,[[["self"]],[T]]],[11,R[41],E,E,24,[[],[R[37]]]],[11,"K",R[49],E,32,[[],[R[7]]]],[11,"K",E,E,33,[[],[R[7]]]],[11,"K",E,E,34,[[],[R[7]]]],[11,"K",E,E,35,[[],[R[7]]]],[11,"K",E,E,36,[[],[R[7]]]],[11,"K",E,E,37,[[],[R[7]]]],[11,"K",E,E,38,[[],[R[7]]]],[11,"K",E,E,39,[[],[R[7]]]],[11,"K",E,E,40,[[],[R[7]]]],[11,"K",E,E,41,[[],[R[7]]]],[11,"K",E,E,42,[[],[R[7]]]],[11,"K",E,E,43,[[],[R[7]]]],[11,"K",E,E,44,[[],[R[7]]]],[11,R[57],R[54],E,18,[[[R[21]],["self"]]]],[11,R[57],E,E,19,[[[R[21]],["self"]]]],[11,R[57],E,E,20,[[[R[21]],["self"]]]],[11,"reduce",R[55],E,22,[[["d"],["self"],["d"]],["d"]]],[11,R[58],E,E,22,[[["d"],["self"]],["bool"]]],[11,"reduce",E,E,23,[[["d"],["self"],["d"]],["d"]]],[11,R[58],E,E,23,[[["d"],["self"]],["bool"]]],[11,"len",R[49],E,4,[[["self"]],[R[7]]]],[11,"get",E,R[60],4,[[["self"],[R[7]]],["u8"]]],[11,R[61],E,E,4,[[["self"],["u8"],[R[7]]]]],[11,R[59],E,R[62],4,[[["self"],["u64"],[R[7]]]]],[11,"rc",E,R[63],4,[[["self"]],["self"]]],[11,"len",E,E,5,[[["self"]],[R[7]]]],[11,"get",E,R[60],5,[[["self"],[R[7]]],["u8"]]],[11,R[61],E,E,5,[[["self"],["u8"],[R[7]]]]],[11,R[59],E,R[62],5,[[["self"],["u64"],[R[7]]]]],[11,"rc",E,R[63],5,[[["self"]],["self"]]],[11,"len",R[50],E,10,[[["self"]],[R[7]]]],[11,"get",E,R[315],10,[[["self"],[R[7]]],["u8"]]],[11,R[61],E,R[316],10,[[["self"],["u8"],[R[7]]]]],[11,R[59],E,E,10,[[["self"],["u64"],[R[7]]]]],[11,"rc",E,E,10,[[["self"]],[R[10]]]],[11,"len",E,E,8,[[["self"]],[R[7]]]],[11,"get",E,R[317],8,[[["self"],[R[7]]],["u8"]]],[11,R[61],E,R[318],8,[[["self"],["u8"],[R[7]]]]],[11,R[59],E,E,8,[[["self"],["u64"],[R[7]]]]],[11,"rc",E,E,8,[[["self"]],[R[12]]]],[11,"len",R[52],R[319],49,[[["self"]],[R[7]]]],[11,"get",E,R[320],49,[[["self"],[R[7]]],["u8"]]],[11,R[61],E,R[321],49,[[["self"],["u8"],[R[7]]]]],[11,R[59],E,E,49,[[["self"],["u64"],[R[7]]]]],[11,"rc",E,E,49,[[["self"]],["self"]]],[11,"len",R[0],E,0,[[["self"]],[R[7]]]],[11,"get",E,E,0,[[["self"],[R[7]]],["u8"]]],[11,R[61],E,R[64],0,[[["self"],["u8"],[R[7]]]]],[11,R[59],E,R[65],0,[[["self"],["u64"],[R[7]]]]],[11,"rc",E,R[66],0,[[["self"]],["self"]]],[11,"len",E,E,1,[[["self"]],[R[7]]]],[11,"get",E,E,1,[[["self"],[R[7]]],["u8"]]],[11,R[61],E,R[64],1,[[["self"],["u8"],[R[7]]]]],[11,R[59],E,R[65],1,[[["self"],["u64"],[R[7]]]]],[11,"rc",E,R[66],1,[[["self"]],["self"]]],[11,"empty",R[49],E,4,[[],["self"]]],[11,"k",E,E,4,[[],[R[7]]]],[11,R[67],E,E,4,[[["u64"]],[R[77]]]],[11,"to_u64",E,E,4,[[["self"]],["u64"]]],[11,R[68],E,R[70],4,[[["u8"],["self"]],["self"]]],[11,R[69],E,E,4,[[["u8"],["self"]],["self"]]],[11,"empty",E,E,5,[[],["self"]]],[11,"k",E,E,5,[[],[R[7]]]],[11,"to_u64",E,E,5,[[["self"]],["u64"]]],[11,R[67],E,E,5,[[["u64"]],["self"]]],[11,R[68],E,R[70],5,[[["u8"],["self"]],["self"]]],[11,R[69],E,E,5,[[["u8"],["self"]],["self"]]],[11,"new",R[50],E,10,[[[R[7]]],["self"]]],[11,R[72],E,E,10,[[],[R[7]]]],[11,R[71],E,R[73],10,[[["self"],[R[7]]],["kmer"]]],[11,"new",E,E,8,[[[R[7]]],["self"]]],[11,R[72],E,E,8,[[],[R[7]]]],[11,R[71],E,R[73],8,[[["self"],[R[7]]],["kmer"]]],[11,R[72],R[52],E,49,[[],[R[7]]]],[11,"new",E,R[322],49,[[[R[7]]],["lmer"]]],[11,R[71],E,R[73],49,[[["self"],[R[7]]],["kmer"]]],[11,"new",R[0],R[74],0,[[[R[7]]],["self"]]],[11,R[72],E,R[75],0,[[],[R[7]]]],[11,R[71],E,R[76],0,[[["self"],[R[7]]],["kmer"]]],[11,"new",E,R[74],1,[[[R[7]]],["self"]]],[11,R[72],E,R[75],1,[[],[R[7]]]],[11,R[71],E,R[76],1,[[["self"],[R[7]]],["kmer"]]],[11,"eq",R[49],E,4,[[[R[77]],["self"]],["bool"]]],[11,"ne",E,E,4,[[[R[77]],["self"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[78]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[78]]],["bool"]]],[11,"eq",E,E,32,[[["k48"],["self"]],["bool"]]],[11,"eq",E,E,33,[[["k40"],["self"]],["bool"]]],[11,"eq",E,E,34,[[["self"],["k31"]],["bool"]]],[11,"eq",E,E,35,[[["k30"],["self"]],["bool"]]],[11,"eq",E,E,36,[[["k24"],["self"]],["bool"]]],[11,"eq",E,E,37,[[["k20"],["self"]],["bool"]]],[11,"eq",E,E,38,[[["k14"],["self"]],["bool"]]],[11,"eq",E,E,39,[[["k12"],["self"]],["bool"]]],[11,"eq",E,E,40,[[["self"],["k6"]],["bool"]]],[11,"eq",E,E,41,[[["k5"],["self"]],["bool"]]],[11,"eq",E,E,42,[[["self"],["k4"]],["bool"]]],[11,"eq",E,E,43,[[["self"],["k3"]],["bool"]]],[11,"eq",E,E,44,[[["k2"],["self"]],["bool"]]],[11,"eq",R[50],E,10,[[["self"],[R[10]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[10]]],["bool"]]],[11,"eq",E,E,8,[[[R[12]],["self"]],["bool"]]],[11,"eq",R[52],E,49,[[["lmer"],["self"]],["bool"]]],[11,"ne",E,E,49,[[["lmer"],["self"]],["bool"]]],[11,"eq",R[0],E,0,[[["self"],[R[79]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[79]]],["bool"]]],[11,"eq",E,E,1,[[[R[80]],["self"]],["bool"]]],[11,"ne",E,E,1,[[[R[80]],["self"]],["bool"]]],[11,"eq",E,E,2,[[["self"],["exts"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["exts"]],["bool"]]],[11,"clone",R[49],E,4,[[["self"]],[R[77]]]],[11,"clone",E,E,5,[[["self"]],[R[78]]]],[11,"clone",E,E,32,[[["self"]],["k48"]]],[11,"clone",E,E,33,[[["self"]],["k40"]]],[11,"clone",E,E,34,[[["self"]],["k31"]]],[11,"clone",E,E,35,[[["self"]],["k30"]]],[11,"clone",E,E,36,[[["self"]],["k24"]]],[11,"clone",E,E,37,[[["self"]],["k20"]]],[11,"clone",E,E,38,[[["self"]],["k14"]]],[11,"clone",E,E,39,[[["self"]],["k12"]]],[11,"clone",E,E,40,[[["self"]],["k6"]]],[11,"clone",E,E,41,[[["self"]],["k5"]]],[11,"clone",E,E,42,[[["self"]],["k4"]]],[11,"clone",E,E,43,[[["self"]],["k3"]]],[11,"clone",E,E,44,[[["self"]],["k2"]]],[11,"clone",R[50],E,10,[[["self"]],[R[10]]]],[11,"clone",E,E,8,[[["self"]],[R[12]]]],[11,"clone",E,E,9,[[["self"]],[R[323]]]],[11,"clone",R[51],E,11,[[["self"]],[R[31]]]],[11,"clone",E,E,13,[[["self"]],["nodekmer"]]],[11,"clone",R[52],E,49,[[["self"]],["lmer"]]],[11,"clone",R[0],E,0,[[["self"]],[R[79]]]],[11,"clone",E,E,3,[[["self"]],["dir"]]],[11,"clone",E,E,2,[[["self"]],["exts"]]],[11,"cmp",R[49],E,4,[[[R[77]],["self"]],[R[81]]]],[11,"cmp",E,E,5,[[["self"],[R[78]]],[R[81]]]],[11,"cmp",E,E,32,[[["k48"],["self"]],[R[81]]]],[11,"cmp",E,E,33,[[["k40"],["self"]],[R[81]]]],[11,"cmp",E,E,34,[[["self"],["k31"]],[R[81]]]],[11,"cmp",E,E,35,[[["k30"],["self"]],[R[81]]]],[11,"cmp",E,E,36,[[["k24"],["self"]],[R[81]]]],[11,"cmp",E,E,37,[[["k20"],["self"]],[R[81]]]],[11,"cmp",E,E,38,[[["k14"],["self"]],[R[81]]]],[11,"cmp",E,E,39,[[["k12"],["self"]],[R[81]]]],[11,"cmp",E,E,40,[[["self"],["k6"]],[R[81]]]],[11,"cmp",E,E,41,[[["k5"],["self"]],[R[81]]]],[11,"cmp",E,E,42,[[["self"],["k4"]],[R[81]]]],[11,"cmp",E,E,43,[[["self"],["k3"]],[R[81]]]],[11,"cmp",E,E,44,[[["k2"],["self"]],[R[81]]]],[11,"cmp",R[50],E,10,[[["self"],[R[10]]],[R[81]]]],[11,"cmp",R[52],E,49,[[["lmer"],["self"]],[R[81]]]],[11,"cmp",R[0],E,0,[[["self"],[R[79]]],[R[81]]]],[11,"cmp",E,E,1,[[[R[80]],["self"]],[R[81]]]],[11,"cmp",E,E,2,[[["self"],["exts"]],[R[81]]]],[11,R[44],R[51],E,13,[[]]],[11,R[82],R[49],E,4,[[[R[77]],["self"]],[[R[81]],[R[20],[R[81]]]]]],[11,"lt",E,E,4,[[[R[77]],["self"]],["bool"]]],[11,"le",E,E,4,[[[R[77]],["self"]],["bool"]]],[11,"gt",E,E,4,[[[R[77]],["self"]],["bool"]]],[11,"ge",E,E,4,[[[R[77]],["self"]],["bool"]]],[11,R[82],E,E,5,[[["self"],[R[78]]],[[R[81]],[R[20],[R[81]]]]]],[11,"lt",E,E,5,[[["self"],[R[78]]],["bool"]]],[11,"le",E,E,5,[[["self"],[R[78]]],["bool"]]],[11,"gt",E,E,5,[[["self"],[R[78]]],["bool"]]],[11,"ge",E,E,5,[[["self"],[R[78]]],["bool"]]],[11,R[82],E,E,32,[[["k48"],["self"]],[[R[81]],[R[20],[R[81]]]]]],[11,R[82],E,E,33,[[["k40"],["self"]],[[R[81]],[R[20],[R[81]]]]]],[11,R[82],E,E,34,[[["self"],["k31"]],[[R[81]],[R[20],[R[81]]]]]],[11,R[82],E,E,35,[[["k30"],["self"]],[[R[81]],[R[20],[R[81]]]]]],[11,R[82],E,E,36,[[["k24"],["self"]],[[R[81]],[R[20],[R[81]]]]]],[11,R[82],E,E,37,[[["k20"],["self"]],[[R[81]],[R[20],[R[81]]]]]],[11,R[82],E,E,38,[[["k14"],["self"]],[[R[81]],[R[20],[R[81]]]]]],[11,R[82],E,E,39,[[["k12"],["self"]],[[R[81]],[R[20],[R[81]]]]]],[11,R[82],E,E,40,[[["self"],["k6"]],[[R[81]],[R[20],[R[81]]]]]],[11,R[82],E,E,41,[[["k5"],["self"]],[[R[81]],[R[20],[R[81]]]]]],[11,R[82],E,E,42,[[["self"],["k4"]],[[R[81]],[R[20],[R[81]]]]]],[11,R[82],E,E,43,[[["self"],["k3"]],[[R[81]],[R[20],[R[81]]]]]],[11,R[82],E,E,44,[[["k2"],["self"]],[[R[81]],[R[20],[R[81]]]]]],[11,R[82],R[50],E,10,[[["self"],[R[10]]],[[R[81]],[R[20],[R[81]]]]]],[11,"lt",E,E,10,[[["self"],[R[10]]],["bool"]]],[11,"le",E,E,10,[[["self"],[R[10]]],["bool"]]],[11,"gt",E,E,10,[[["self"],[R[10]]],["bool"]]],[11,"ge",E,E,10,[[["self"],[R[10]]],["bool"]]],[11,R[82],R[52],E,49,[[["lmer"],["self"]],[[R[81]],[R[20],[R[81]]]]]],[11,"lt",E,E,49,[[["lmer"],["self"]],["bool"]]],[11,"le",E,E,49,[[["lmer"],["self"]],["bool"]]],[11,"gt",E,E,49,[[["lmer"],["self"]],["bool"]]],[11,"ge",E,E,49,[[["lmer"],["self"]],["bool"]]],[11,R[82],R[0],E,0,[[["self"],[R[79]]],[[R[81]],[R[20],[R[81]]]]]],[11,"lt",E,E,0,[[["self"],[R[79]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[79]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[79]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[79]]],["bool"]]],[11,R[82],E,E,1,[[[R[80]],["self"]],[[R[81]],[R[20],[R[81]]]]]],[11,"lt",E,E,1,[[[R[80]],["self"]],["bool"]]],[11,"le",E,E,1,[[[R[80]],["self"]],["bool"]]],[11,"gt",E,E,1,[[[R[80]],["self"]],["bool"]]],[11,"ge",E,E,1,[[[R[80]],["self"]],["bool"]]],[11,R[82],E,E,2,[[["self"],["exts"]],[[R[81]],[R[20],[R[81]]]]]],[11,"lt",E,E,2,[[["self"],["exts"]],["bool"]]],[11,"le",E,E,2,[[["self"],["exts"]],["bool"]]],[11,"gt",E,E,2,[[["self"],["exts"]],["bool"]]],[11,"ge",E,E,2,[[["self"],["exts"]],["bool"]]],[11,"next",R[50],E,45,[[["self"]],[["u8"],[R[20],["u8"]]]]],[11,"next",R[51],E,46,[[["self"]],[["node"],[R[20],["node"]]]]],[11,"next",E,E,47,[[["self"]],[R[20]]]],[11,"next",E,E,48,[[["self"]],[R[20]]]],[11,R[324],E,E,48,[[["self"]]]],[11,"nth",E,R[325],48,[[["self"],[R[7]]],[R[20]]]],[11,"next",R[0],E,29,[[["self"]],[["u8"],[R[20],["u8"]]]]],[11,"next",E,E,30,[[["self"]],[R[20]]]],[11,"next",E,E,31,[[["self"]],[R[20]]]],[11,"fmt",R[49],E,4,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,5,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,32,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,33,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,34,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,35,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,36,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,37,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,38,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,39,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,40,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,41,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,42,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,43,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,44,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",R[50],E,10,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,8,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,9,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",R[51],E,11,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,12,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,14,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",R[52],E,49,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",R[53],E,16,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",R[0],E,0,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,1,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,3,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,2,[[[R[83]],["self"]],[R[37]]]],[11,"hash",R[49],E,4,[[["self"],["__ht"]]]],[11,"hash",E,E,5,[[["__htks"],["self"]]]],[11,"hash",E,E,32,[[["self"],["__h"]]]],[11,"hash",E,E,33,[[["self"],["__h"]]]],[11,"hash",E,E,34,[[["self"],["__h"]]]],[11,"hash",E,E,35,[[["self"],["__h"]]]],[11,"hash",E,E,36,[[["self"],["__h"]]]],[11,"hash",E,E,37,[[["self"],["__h"]]]],[11,"hash",E,E,38,[[["self"],["__h"]]]],[11,"hash",E,E,39,[[["self"],["__h"]]]],[11,"hash",E,E,40,[[["self"],["__h"]]]],[11,"hash",E,E,41,[[["self"],["__h"]]]],[11,"hash",E,E,42,[[["self"],["__h"]]]],[11,"hash",E,E,43,[[["self"],["__h"]]]],[11,"hash",E,E,44,[[["self"],["__h"]]]],[11,"hash",R[50],E,10,[[["self"],["__h"]]]],[11,"hash",R[52],E,49,[[["__ha"],["self"]]]],[11,"hash",R[0],E,2,[[["self"],["__h"]]]],[11,R[84],R[49],E,4,[[["__s"],["self"]],[R[37]]]],[11,R[84],E,E,5,[[["__s"],["self"]],[R[37]]]],[11,R[84],R[50],E,10,[[["__s"],["self"]],[R[37]]]],[11,R[84],E,E,9,[[["__s"],["self"]],[R[37]]]],[11,R[84],R[51],E,11,[[["__s"],["self"]],[R[37]]]],[11,R[84],E,E,12,[[["__s"],["self"]],[R[37]]]],[11,R[84],R[52],E,49,[[["__s"],["self"]],[R[37]]]],[11,R[84],R[0],E,3,[[["__s"],["self"]],[R[37]]]],[11,R[84],E,E,2,[[["__s"],["self"]],[R[37]]]],[11,R[85],R[49],E,4,[[["__d"]],[R[37]]]],[11,R[85],E,E,5,[[["__d"]],[R[37]]]],[11,R[85],R[50],E,10,[[["__d"]],[R[37]]]],[11,R[85],E,E,9,[[["__d"]],[R[37]]]],[11,R[85],R[51],E,11,[[["__d"]],[R[37]]]],[11,R[85],E,E,12,[[["__d"]],[R[37]]]],[11,R[85],R[52],E,49,[[["__d"]],[R[37]]]],[11,R[85],R[0],E,3,[[["__d"]],[R[37]]]],[11,R[85],E,E,2,[[["__d"]],[R[37]]]]],"p":[[3,R[86]],[3,R[87]],[3,"Exts"],[4,"Dir"],[3,"IntKmer"],[3,R[88]],[8,"IntHelp"],[8,R[89]],[3,R[90]],[3,R[91]],[3,R[92]],[3,R[93]],[3,R[94]],[3,R[95]],[3,"Node"],[8,"Array"],[3,R[96]],[8,R[97]],[3,R[98]],[3,R[99]],[3,R[100]],[8,R[101]],[3,R[102]],[3,R[103]],[3,R[104]],[8,"Mer"],[8,"Kmer"],[8,R[284]],[8,"Vmer"],[3,"MerIter"],[3,R[114]],[3,R[105]],[3,"K48"],[3,"K40"],[3,"K31"],[3,"K30"],[3,"K24"],[3,"K20"],[3,"K14"],[3,"K12"],[3,"K6"],[3,"K5"],[3,"K4"],[3,"K3"],[3,"K2"],[3,R[106]],[3,R[181]],[3,R[107]],[3,R[108]],[3,"Lmer"]]};
searchIndex[R[0]]={"doc":R[109],"i":[[3,"MerIter",R[0],R[110],N,N],[3,R[86],E,R[111],N,N],[12,"0",E,E,0,N],[3,R[87],E,R[112],N,N],[12,"0",E,E,1,N],[3,"Exts",E,R[113],N,N],[12,"val",E,E,2,N],[3,R[114],E,R[115],N,N],[3,R[105],E,R[116],N,N],[4,"Dir",E,R[117],N,N],[13,"Left",E,E,3,N],[13,"Right",E,E,3,N],[5,R[118],E,R[2],N,[[["u8"]],["u8"]]],[5,R[119],E,R[1],N,[[["u8"]],["u8"]]],[5,R[120],E,E,N,[[["u8"]],[["u8"],[R[20],["u8"]]]]],[5,R[121],E,R[1],N,[[["u8"]],["bool"]]],[5,R[122],E,R[2],N,[[["u8"]],["char"]]],[5,R[36],E,R[123],N,[[["u8"]],["u8"]]],[0,"kmer",E,R[124],N,N],[3,"IntKmer",R[49],R[125],N,N],[12,R[3],E,E,4,N],[3,R[88],E,R[126],N,N],[12,R[3],E,E,5,N],[12,"phantom",E,E,5,N],[3,"K48",E,R[127],N,N],[3,"K40",E,R[4],N,N],[3,"K30",E,R[4],N,N],[3,"K24",E,R[128],N,N],[3,"K20",E,R[129],N,N],[3,"K14",E,R[130],N,N],[3,"K12",E,R[131],N,N],[3,"K6",E,R[5],N,N],[3,"K5",E,R[5],N,N],[3,"K4",E,R[5],N,N],[3,"K3",E,R[5],N,N],[3,"K2",E,R[5],N,N],[6,"Kmer64",E,R[132],N,N],[6,"Kmer48",E,R[133],N,N],[6,"Kmer40",E,R[134],N,N],[6,"Kmer32",E,R[135],N,N],[6,"Kmer30",E,R[136],N,N],[6,"Kmer24",E,R[137],N,N],[6,"Kmer20",E,R[138],N,N],[6,"Kmer16",E,R[139],N,N],[6,"Kmer14",E,R[140],N,N],[6,"Kmer12",E,R[141],N,N],[6,"Kmer8",E,R[142],N,N],[6,"Kmer6",E,E,N,N],[6,"Kmer5",E,E,N,N],[6,"Kmer4",E,E,N,N],[6,"Kmer3",E,E,N,N],[6,"Kmer2",E,E,N,N],[8,"IntHelp",E,R[143],N,N],[10,R[144],E,R[145],6,[[["self"]],["self"]]],[8,R[89],E,R[146],N,N],[10,"K",E,E,7,[[],[R[7]]]],[11,R[6],E,E,4,[[[R[7]]],[T]]],[11,R[8],E,E,4,[[[R[7]]],[T]]],[11,R[6],E,E,5,[[[R[7]]],[T]]],[11,R[8],E,E,5,[[[R[7]]],[T]]],[0,R[9],R[0],R[147],N,N],[3,R[92],R[50],R[148],N,N],[3,R[106],E,R[149],N,N],[3,R[90],E,R[150],N,N],[12,R[9],E,E,8,N],[12,"start",E,E,8,N],[12,"length",E,E,8,N],[12,"is_rc",E,E,8,N],[3,R[91],E,R[151],N,N],[12,R[23],E,E,9,N],[12,"start",E,E,9,N],[12,"length",E,E,9,N],[11,"new",E,R[152],10,[[],[R[10]]]],[11,"len",E,R[153],10,[[["self"]],[R[7]]]],[11,R[154],E,R[155],10,[[[R[7]]],["self"]]],[11,"blank",E,R[156],10,[[[R[7]]],["self"]]],[11,R[35],E,R[11],10,[[["str"]],[R[10]]]],[11,R[157],E,R[11],10,[[["str"]],[["vec",[R[10]]],[R[10]]]]],[11,R[158],E,R[159],10,[[],[R[10]]]],[11,R[160],E,R[161],10,[[],[R[10]]]],[11,R[33],E,R[162],10,[[],[R[10]]]],[11,R[13],E,R[163],10,[[["self"]],["string"]]],[11,"to_bytes",E,R[164],10,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[165],E,R[166],10,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"push",E,R[167],10,[[["self"],["u8"]]]],[11,R[168],E,R[169],10,[[["self"],["vec"],[R[7]]]]],[11,"iter",E,R[170],10,[[["self"]],[R[171]]]],[11,"clear",E,R[172],10,[[["self"]]]],[11,"is_empty",E,E,10,[[["self"]],["bool"]]],[11,"prefix",E,R[173],10,[[["self"],[R[7]]],[R[12]]]],[11,"suffix",E,R[174],10,[[["self"],[R[7]]],[R[12]]]],[11,"slice",E,R[14],10,[[["self"],[R[7]]],[R[12]]]],[11,"reverse",E,R[175],10,[[["self"]],[R[10]]]],[11,R[32],E,E,8,[[["self"]],["bool"]]],[11,"bytes",E,E,8,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"ascii",E,E,8,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[176],E,E,8,[[["self"]],["string"]]],[11,R[13],E,E,8,[[["self"]],["string"]]],[11,R[38],E,E,8,[[["self"]],[R[10]]]],[11,"slice",E,R[14],8,[[["self"],[R[7]]],[R[12]]]],[11,"new",E,R[177],9,[[],["self"]]],[11,"get",E,R[15],9,[[["self"],[R[7]]],[R[12]]]],[11,"slice",E,R[15],9,[[["self"],[R[7]]],[R[12]]]],[11,"len",E,R[178],9,[[["self"]],[R[7]]]],[11,"add",E,E,9,[[["self"],[R[18]]]]],[0,"graph",R[0],R[179],N,N],[3,R[93],R[51],R[16],N,N],[12,R[180],E,E,11,N],[12,"exts",E,E,11,N],[12,"data",E,E,11,N],[12,"stranded",E,E,11,N],[3,R[94],E,R[16],N,N],[12,"base",E,E,12,N],[3,R[181],E,R[17],N,N],[3,R[107],E,R[17],N,N],[3,R[95],E,R[17],N,N],[12,"node_id",E,E,13,N],[3,R[108],E,E,N,N],[3,"Node",E,R[182],N,N],[12,"node_id",E,E,14,N],[12,"graph",E,E,14,N],[11,"new",E,E,11,[[["bool"]],["self"]]],[11,"len",E,E,11,[[["self"]],[R[7]]]],[11,"combine",E,E,11,[[[R[21]]],["self"]]],[11,"add",E,E,11,[[["self"],[R[18]],["d"],["exts"]]]],[11,"finish",E,E,11,[[],[R[19]]]],[11,R[183],E,E,11,[[],[R[19]]]],[11,"len",E,R[184],12,[[["self"]],[R[7]]]],[11,"get_node",E,R[185],12,[[["self"],[R[7]]],["node"]]],[11,R[186],E,R[187],12,[[["self"]],["nodeiter"]]],[11,R[188],E,R[189],12,[[["k"],["dir"],["self"]],[R[20]]]],[11,R[190],E,R[191],12,[[["self"]],[R[20]]]],[11,"fix_exts",E,R[192],12,[[["bitset"],["self"],[R[20],["bitset"]]]]],[11,R[193],E,E,12,[[["bitset"],["self"],[R[7]],[R[20],["bitset"]]],["exts"]]],[11,"max_path",E,R[194],12,[[["self"],["f"],["f2"]],["vec"]]],[11,R[195],E,R[196],12,[[[R[21]],["self"]],[R[10]]]],[11,"to_dot",E,R[197],12,[[["path"],["asref",["path"]],["self"],["f"]]]],[11,"to_gfa",E,R[22],12,[[["path"],["asref",["path"]],["self"]],[[R[37],["error"]],["error"]]]],[11,R[198],E,R[22],12,[[["path"],["asref",["path"]],["self"],["fn"]],[[R[37],["error"]],["error"]]]],[11,R[199],E,E,12,[[[R[20],["value"]],["value"],["self"],["w"],["fn"]]]],[11,"to_json",E,R[200],12,[[["self"],["w"],["fn"]]]],[11,"print",E,R[201],12,[[["self"]]]],[11,R[202],E,E,12,[[["self"]]]],[11,R[203],E,E,12,[[["self"],["write"]],[[R[37],["error"]],["error"]]]],[11,R[204],E,E,12,[[["self"],["f"],[R[7]],["f2"]],["vec"]]],[11,"len",E,R[205],14,[[["self"]],[R[7]]]],[11,R[23],E,R[206],14,[[["self"]],[R[12]]]],[11,"data",E,R[207],14,[[["self"]],["d"]]],[11,"exts",E,R[208],14,[[["self"]],["exts"]]],[11,"l_edges",E,R[209],14,[[["self"]],[R[24]]]],[11,"r_edges",E,R[210],14,[[["self"]],[R[24]]]],[11,"edges",E,R[211],14,[[["dir"],["self"]],[R[24]]]],[0,"vmer",R[0],R[212],N,N],[3,"Lmer",R[52],R[213],N,N],[6,"Lmer1",E,E,N,N],[6,"Lmer2",E,E,N,N],[6,"Lmer3",E,E,N,N],[8,"Array",E,R[214],N,N],[16,"Item",E,E,15,N],[10,"new",E,E,15,[[],["self"]]],[10,"size",E,E,15,[[],[R[7]]]],[10,"as_slice",E,E,15,[[["self"]]]],[10,R[215],E,E,15,[[["self"]]]],[0,"msp",R[0],R[216],N,N],[3,R[96],R[53],E,N,N],[5,R[217],E,R[218],N,[[["v"],["bool"],[R[7]]],[["vec",[R[25]]],[R[25]]]]],[5,R[219],E,E,N,[[["bool"],[R[7]],[R[20]]],["vec"]]],[11,"new",E,E,16,[[["u32"],["u16"]],[R[25]]]],[11,"start",E,E,16,[[["self"]],[R[7]]]],[11,"len",E,E,16,[[["self"]],[R[7]]]],[11,"end",E,E,16,[[["self"]],[R[7]]]],[11,"range",E,E,16,[[["self"]],[["range",[R[7]]],[R[7]]]]],[11,"bucket",E,E,16,[[["self"]],["u16"]]],[0,"filter",R[0],R[220],N,N],[3,R[98],R[54],R[26],N,N],[3,R[99],E,R[26],N,N],[3,R[100],E,E,N,N],[5,R[221],E,R[222],N,[[["deref"],["bool"],[R[7]]]]],[5,R[223],E,R[27],N,[[["vec"],["vec"],["bool"]]]],[5,R[224],E,R[27],N,[[["vec"],["bool"]]]],[6,R[225],E,E,N,N],[8,R[97],E,R[226],N,N],[10,R[57],E,R[227],17,[[["self"],[R[21]]]]],[11,"new",E,R[228],18,[[[R[7]]],[R[229]]]],[11,"new",E,R[230],19,[[[R[7]]],[R[231]]]],[11,"new",E,E,20,[[[R[7]]],[R[232]]]],[11,R[233],E,E,20,[[["self"]],[["vec",["vec"]],["vec"]]]],[11,R[234],E,E,20,[[["self"]],[R[7]]]],[11,R[235],E,E,20,[[["self"]],[R[7]]]],[0,R[236],R[0],R[237],N,N],[3,R[102],R[55],R[238],N,N],[3,R[103],E,E,N,N],[5,R[239],E,R[240],N,[[[R[28]],["debug"],["kmer"],["vec",[R[7]]],[R[20],["vec"]],["send"],["sync"],[R[29]],["clone"],["bool"],[R[19]]],[[R[28]],["kmer"],["debug"],["send"],["sync"],["clone"],[R[19]]]]],[5,R[241],E,R[30],N,[[["debug"],[R[29]],["clone"],["bool"],[R[242]]],[[R[31]],["kmer"],["debug"],["clone"]]]],[5,R[243],E,R[30],N,[[["debug"],[R[29]],["vec"],["clone"],["bool"]],[[R[31]],["kmer"],["debug"],["clone"]]]],[8,R[101],E,R[244],N,N],[10,"reduce",E,E,21,[[["d"],["self"],["d"]],["d"]]],[10,R[58],E,E,21,[[["d"],["self"]],["bool"]]],[11,"new",E,E,22,[[["f"]],[R[245]]]],[11,"new",E,E,23,[[],[R[246]]]],[0,R[247],R[0],R[248],N,N],[3,R[104],R[56],E,N,N],[11,"new",E,E,24,[[["t1"]],[R[249]]]],[11,R[250],E,E,24,[[[R[19]],["self"]],[["vec",[R[7]]],[R[7]]]]],[0,"test",R[0],R[251],N,N],[5,R[252],R[253],R[254],N,[[],["u8"]]],[5,R[255],E,R[256],N,[[[R[7]]],[["u8"],["vec",["u8"]]]]],[5,"edit_dna",E,R[257],N,[[["r"],["f64"],["vec"]]]],[5,R[258],E,E,N,[[],["kmer"]]],[5,R[259],E,E,N,[[],["vmer"]]],[5,R[260],E,E,N,[[],[["vec",["vec"]],["vec",["u8"]]]]],[5,R[261],E,E,N,[[],[["vec",["vec"]],["vec",["u8"]]]]],[8,"Mer",R[0],R[262],N,N],[10,"len",E,R[263],25,[[["self"]],[R[7]]]],[10,"get",E,R[264],25,[[["self"],[R[7]]],["u8"]]],[10,R[61],E,R[64],25,[[["self"],["u8"],[R[7]]]]],[10,R[59],E,R[65],25,[[["self"],["u64"],[R[7]]]]],[10,"rc",E,R[66],25,[[["self"]],["self"]]],[11,"iter",E,R[265],25,[[["self"]],["meriter"]]],[8,"Kmer",E,R[266],N,N],[10,"empty",E,R[267],26,[[],["self"]]],[10,"k",E,R[268],26,[[],[R[7]]]],[10,"to_u64",E,R[269],26,[[["self"]],["u64"]]],[10,R[67],E,E,26,[[["u64"]],["self"]]],[10,R[68],E,R[270],26,[[["u8"],["self"]],["self"]]],[10,R[69],E,R[271],26,[[["u8"],["self"]],["self"]]],[11,"extend",E,R[272],26,[[["dir"],["u8"],["self"]],["self"]]],[11,R[273],E,R[274],26,[[["dir"],["self"],["exts"]],["vec"]]],[11,R[275],E,R[276],26,[[["self"]]]],[11,"min_rc",E,E,26,[[["self"]],["self"]]],[11,R[32],E,R[277],26,[[["self"]],["bool"]]],[11,R[33],E,R[34],26,[[],["self"]]],[11,R[278],E,R[34],26,[[],["self"]]],[11,R[13],E,R[279],26,[[["self"]],["string"]]],[11,R[280],E,R[281],26,[[],["vec"]]],[11,R[282],E,R[283],26,[[],["vec"]]],[8,R[284],E,R[285],N,N],[11,"set",E,E,27,[[["u8"],["self"],[R[7]]],["self"]]],[11,R[286],E,E,27,[[["self"],["u64"],[R[7]]],["self"]]],[8,"Vmer",E,R[287],N,N],[10,"new",E,R[74],28,[[[R[7]]],["self"]]],[10,R[72],E,R[75],28,[[],[R[7]]]],[11,R[288],E,R[289],28,[[],["self"]]],[10,R[71],E,R[76],28,[[["self"],[R[7]]],["kmer"]]],[11,R[290],E,R[291],28,[[["self"]],["kmer"]]],[11,R[292],E,R[293],28,[[["self"]],["kmer"]]],[11,R[294],E,R[295],28,[[["self"]]]],[11,R[296],E,R[297],28,[[["dir"],["self"]],["kmer"]]],[11,R[298],E,R[299],28,[[["self"]],[["kmer"],["kmeriter"]]]],[11,R[300],E,R[301],28,[[["self"],["exts"]],[["kmer"],[R[302]]]]],[11,"flip",E,R[303],3,[[["self"]],["dir"]]],[11,R[304],E,R[305],3,[[["self"],["bool"]],["dir"]]],[11,"pick",E,R[306],3,[[["self"],[T]],[T]]],[11,"new",E,E,2,[[["u8"]],["self"]]],[11,"empty",E,E,2,[[],["exts"]]],[11,R[307],E,E,2,[[["exts"]],["exts"]]],[11,"merge",E,E,2,[[["exts"]],["exts"]]],[11,"add",E,E,2,[[["self"],["exts"]],["exts"]]],[11,"set",E,E,2,[[["dir"],["u8"],["self"]],["exts"]]],[11,"get",E,E,2,[[["dir"],["self"]],[["u8"],["vec",["u8"]]]]],[11,"has_ext",E,E,2,[[["dir"],["u8"],["self"]],["bool"]]],[11,R[308],E,E,2,[[[R[7]]],["exts"]]],[11,R[35],E,E,2,[[[R[10]],[R[7]]],["exts"]]],[11,R[309],E,E,2,[[["self"]],["u8"]]],[11,R[310],E,E,2,[[["self"]],["u8"]]],[11,R[311],E,E,2,[[["dir"],["self"]],["u8"]]],[11,"mk_left",E,E,2,[[["u8"]],["exts"]]],[11,"mk_right",E,E,2,[[["u8"]],["exts"]]],[11,"mk",E,E,2,[[["u8"]],["exts"]]],[11,R[312],E,E,2,[[["dir"],["self"]],[["u8"],[R[20],["u8"]]]]],[11,R[313],E,E,2,[[["dir"],["self"]],["exts"]]],[11,R[36],E,R[314],2,[[["self"]],["exts"]]],[11,"reverse",E,E,2,[[["self"]],["exts"]]],[11,"rc",E,E,2,[[["self"]],["exts"]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[44],E,E,29,[[],["i"]]],[11,"into",E,E,29,[[],[U]]],[11,R[39],E,E,29,[[[U]],[R[37]]]],[11,R[45],E,E,29,[[["self"]],[T]]],[11,R[42],E,E,29,[[["self"]],[R[46]]]],[11,R[40],E,E,29,[[["self"]],[T]]],[11,R[41],E,E,29,[[],[R[37]]]],[11,R[47],E,E,29,[[],[R[48]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[38],E,E,0,[[["self"]],[T]]],[11,R[43],E,E,0,[[[T],["self"]]]],[11,R[39],E,E,0,[[[U]],[R[37]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"]],[R[46]]]],[11,R[40],E,E,0,[[["self"]],[T]]],[11,R[41],E,E,0,[[],[R[37]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[39],E,E,1,[[[U]],[R[37]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"]],[R[46]]]],[11,R[40],E,E,1,[[["self"]],[T]]],[11,R[41],E,E,1,[[],[R[37]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[38],E,E,2,[[["self"]],[T]]],[11,R[43],E,E,2,[[[T],["self"]]]],[11,R[39],E,E,2,[[[U]],[R[37]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[42],E,E,2,[[["self"]],[R[46]]]],[11,R[40],E,E,2,[[["self"]],[T]]],[11,R[41],E,E,2,[[],[R[37]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[44],E,E,30,[[],["i"]]],[11,"into",E,E,30,[[],[U]]],[11,R[39],E,E,30,[[[U]],[R[37]]]],[11,R[45],E,E,30,[[["self"]],[T]]],[11,R[42],E,E,30,[[["self"]],[R[46]]]],[11,R[40],E,E,30,[[["self"]],[T]]],[11,R[41],E,E,30,[[],[R[37]]]],[11,R[47],E,E,30,[[],[R[48]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[44],E,E,31,[[],["i"]]],[11,"into",E,E,31,[[],[U]]],[11,R[39],E,E,31,[[[U]],[R[37]]]],[11,R[45],E,E,31,[[["self"]],[T]]],[11,R[42],E,E,31,[[["self"]],[R[46]]]],[11,R[40],E,E,31,[[["self"]],[T]]],[11,R[41],E,E,31,[[],[R[37]]]],[11,R[47],E,E,31,[[],[R[48]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[38],E,E,3,[[["self"]],[T]]],[11,R[43],E,E,3,[[[T],["self"]]]],[11,R[39],E,E,3,[[[U]],[R[37]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[42],E,E,3,[[["self"]],[R[46]]]],[11,R[40],E,E,3,[[["self"]],[T]]],[11,R[41],E,E,3,[[],[R[37]]]],[11,"from",R[49],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[38],E,E,4,[[["self"]],[T]]],[11,R[43],E,E,4,[[[T],["self"]]]],[11,R[39],E,E,4,[[[U]],[R[37]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[42],E,E,4,[[["self"]],[R[46]]]],[11,R[40],E,E,4,[[["self"]],[T]]],[11,R[41],E,E,4,[[],[R[37]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[38],E,E,5,[[["self"]],[T]]],[11,R[43],E,E,5,[[[T],["self"]]]],[11,R[39],E,E,5,[[[U]],[R[37]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[42],E,E,5,[[["self"]],[R[46]]]],[11,R[40],E,E,5,[[["self"]],[T]]],[11,R[41],E,E,5,[[],[R[37]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[38],E,E,32,[[["self"]],[T]]],[11,R[43],E,E,32,[[[T],["self"]]]],[11,R[39],E,E,32,[[[U]],[R[37]]]],[11,R[45],E,E,32,[[["self"]],[T]]],[11,R[42],E,E,32,[[["self"]],[R[46]]]],[11,R[40],E,E,32,[[["self"]],[T]]],[11,R[41],E,E,32,[[],[R[37]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[38],E,E,33,[[["self"]],[T]]],[11,R[43],E,E,33,[[[T],["self"]]]],[11,R[39],E,E,33,[[[U]],[R[37]]]],[11,R[45],E,E,33,[[["self"]],[T]]],[11,R[42],E,E,33,[[["self"]],[R[46]]]],[11,R[40],E,E,33,[[["self"]],[T]]],[11,R[41],E,E,33,[[],[R[37]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[38],E,E,34,[[["self"]],[T]]],[11,R[43],E,E,34,[[[T],["self"]]]],[11,R[39],E,E,34,[[[U]],[R[37]]]],[11,R[45],E,E,34,[[["self"]],[T]]],[11,R[42],E,E,34,[[["self"]],[R[46]]]],[11,R[40],E,E,34,[[["self"]],[T]]],[11,R[41],E,E,34,[[],[R[37]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[38],E,E,35,[[["self"]],[T]]],[11,R[43],E,E,35,[[[T],["self"]]]],[11,R[39],E,E,35,[[[U]],[R[37]]]],[11,R[45],E,E,35,[[["self"]],[T]]],[11,R[42],E,E,35,[[["self"]],[R[46]]]],[11,R[40],E,E,35,[[["self"]],[T]]],[11,R[41],E,E,35,[[],[R[37]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[38],E,E,36,[[["self"]],[T]]],[11,R[43],E,E,36,[[[T],["self"]]]],[11,R[39],E,E,36,[[[U]],[R[37]]]],[11,R[45],E,E,36,[[["self"]],[T]]],[11,R[42],E,E,36,[[["self"]],[R[46]]]],[11,R[40],E,E,36,[[["self"]],[T]]],[11,R[41],E,E,36,[[],[R[37]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[38],E,E,37,[[["self"]],[T]]],[11,R[43],E,E,37,[[[T],["self"]]]],[11,R[39],E,E,37,[[[U]],[R[37]]]],[11,R[45],E,E,37,[[["self"]],[T]]],[11,R[42],E,E,37,[[["self"]],[R[46]]]],[11,R[40],E,E,37,[[["self"]],[T]]],[11,R[41],E,E,37,[[],[R[37]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[38],E,E,38,[[["self"]],[T]]],[11,R[43],E,E,38,[[[T],["self"]]]],[11,R[39],E,E,38,[[[U]],[R[37]]]],[11,R[45],E,E,38,[[["self"]],[T]]],[11,R[42],E,E,38,[[["self"]],[R[46]]]],[11,R[40],E,E,38,[[["self"]],[T]]],[11,R[41],E,E,38,[[],[R[37]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[38],E,E,39,[[["self"]],[T]]],[11,R[43],E,E,39,[[[T],["self"]]]],[11,R[39],E,E,39,[[[U]],[R[37]]]],[11,R[45],E,E,39,[[["self"]],[T]]],[11,R[42],E,E,39,[[["self"]],[R[46]]]],[11,R[40],E,E,39,[[["self"]],[T]]],[11,R[41],E,E,39,[[],[R[37]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[38],E,E,40,[[["self"]],[T]]],[11,R[43],E,E,40,[[[T],["self"]]]],[11,R[39],E,E,40,[[[U]],[R[37]]]],[11,R[45],E,E,40,[[["self"]],[T]]],[11,R[42],E,E,40,[[["self"]],[R[46]]]],[11,R[40],E,E,40,[[["self"]],[T]]],[11,R[41],E,E,40,[[],[R[37]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[38],E,E,41,[[["self"]],[T]]],[11,R[43],E,E,41,[[[T],["self"]]]],[11,R[39],E,E,41,[[[U]],[R[37]]]],[11,R[45],E,E,41,[[["self"]],[T]]],[11,R[42],E,E,41,[[["self"]],[R[46]]]],[11,R[40],E,E,41,[[["self"]],[T]]],[11,R[41],E,E,41,[[],[R[37]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[38],E,E,42,[[["self"]],[T]]],[11,R[43],E,E,42,[[[T],["self"]]]],[11,R[39],E,E,42,[[[U]],[R[37]]]],[11,R[45],E,E,42,[[["self"]],[T]]],[11,R[42],E,E,42,[[["self"]],[R[46]]]],[11,R[40],E,E,42,[[["self"]],[T]]],[11,R[41],E,E,42,[[],[R[37]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[38],E,E,43,[[["self"]],[T]]],[11,R[43],E,E,43,[[[T],["self"]]]],[11,R[39],E,E,43,[[[U]],[R[37]]]],[11,R[45],E,E,43,[[["self"]],[T]]],[11,R[42],E,E,43,[[["self"]],[R[46]]]],[11,R[40],E,E,43,[[["self"]],[T]]],[11,R[41],E,E,43,[[],[R[37]]]],[11,"from",R[50],E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[38],E,E,10,[[["self"]],[T]]],[11,R[43],E,E,10,[[[T],["self"]]]],[11,R[39],E,E,10,[[[U]],[R[37]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[42],E,E,10,[[["self"]],[R[46]]]],[11,R[40],E,E,10,[[["self"]],[T]]],[11,R[41],E,E,10,[[],[R[37]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[44],E,E,44,[[],["i"]]],[11,"into",E,E,44,[[],[U]]],[11,R[39],E,E,44,[[[U]],[R[37]]]],[11,R[45],E,E,44,[[["self"]],[T]]],[11,R[42],E,E,44,[[["self"]],[R[46]]]],[11,R[40],E,E,44,[[["self"]],[T]]],[11,R[41],E,E,44,[[],[R[37]]]],[11,R[47],E,E,44,[[],[R[48]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[38],E,E,8,[[["self"]],[T]]],[11,R[43],E,E,8,[[[T],["self"]]]],[11,R[39],E,E,8,[[[U]],[R[37]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[42],E,E,8,[[["self"]],[R[46]]]],[11,R[40],E,E,8,[[["self"]],[T]]],[11,R[41],E,E,8,[[],[R[37]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[38],E,E,9,[[["self"]],[T]]],[11,R[43],E,E,9,[[[T],["self"]]]],[11,R[39],E,E,9,[[[U]],[R[37]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[42],E,E,9,[[["self"]],[R[46]]]],[11,R[40],E,E,9,[[["self"]],[T]]],[11,R[41],E,E,9,[[],[R[37]]]],[11,"from",R[51],E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[38],E,E,11,[[["self"]],[T]]],[11,R[43],E,E,11,[[[T],["self"]]]],[11,R[39],E,E,11,[[[U]],[R[37]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[42],E,E,11,[[["self"]],[R[46]]]],[11,R[40],E,E,11,[[["self"]],[T]]],[11,R[41],E,E,11,[[],[R[37]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[39],E,E,12,[[[U]],[R[37]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[42],E,E,12,[[["self"]],[R[46]]]],[11,R[40],E,E,12,[[["self"]],[T]]],[11,R[41],E,E,12,[[],[R[37]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[44],E,E,45,[[],["i"]]],[11,"into",E,E,45,[[],[U]]],[11,R[39],E,E,45,[[[U]],[R[37]]]],[11,R[45],E,E,45,[[["self"]],[T]]],[11,R[42],E,E,45,[[["self"]],[R[46]]]],[11,R[40],E,E,45,[[["self"]],[T]]],[11,R[41],E,E,45,[[],[R[37]]]],[11,R[47],E,E,45,[[],[R[48]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[44],E,E,46,[[],["i"]]],[11,"into",E,E,46,[[],[U]]],[11,R[39],E,E,46,[[[U]],[R[37]]]],[11,R[45],E,E,46,[[["self"]],[T]]],[11,R[42],E,E,46,[[["self"]],[R[46]]]],[11,R[40],E,E,46,[[["self"]],[T]]],[11,R[41],E,E,46,[[],[R[37]]]],[11,R[47],E,E,46,[[],[R[48]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[44],E,E,13,[[],["i"]]],[11,"into",E,E,13,[[],[U]]],[11,R[38],E,E,13,[[["self"]],[T]]],[11,R[43],E,E,13,[[[T],["self"]]]],[11,R[39],E,E,13,[[[U]],[R[37]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[42],E,E,13,[[["self"]],[R[46]]]],[11,R[40],E,E,13,[[["self"]],[T]]],[11,R[41],E,E,13,[[],[R[37]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[44],E,E,47,[[],["i"]]],[11,"into",E,E,47,[[],[U]]],[11,R[39],E,E,47,[[[U]],[R[37]]]],[11,R[45],E,E,47,[[["self"]],[T]]],[11,R[42],E,E,47,[[["self"]],[R[46]]]],[11,R[40],E,E,47,[[["self"]],[T]]],[11,R[41],E,E,47,[[],[R[37]]]],[11,R[47],E,E,47,[[],[R[48]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[39],E,E,14,[[[U]],[R[37]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[42],E,E,14,[[["self"]],[R[46]]]],[11,R[40],E,E,14,[[["self"]],[T]]],[11,R[41],E,E,14,[[],[R[37]]]],[11,"from",R[52],E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[38],E,E,48,[[["self"]],[T]]],[11,R[43],E,E,48,[[[T],["self"]]]],[11,R[39],E,E,48,[[[U]],[R[37]]]],[11,R[45],E,E,48,[[["self"]],[T]]],[11,R[42],E,E,48,[[["self"]],[R[46]]]],[11,R[40],E,E,48,[[["self"]],[T]]],[11,R[41],E,E,48,[[],[R[37]]]],[11,"from",R[53],E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[39],E,E,16,[[[U]],[R[37]]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[42],E,E,16,[[["self"]],[R[46]]]],[11,R[40],E,E,16,[[["self"]],[T]]],[11,R[41],E,E,16,[[],[R[37]]]],[11,"from",R[54],E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[39],E,E,18,[[[U]],[R[37]]]],[11,R[45],E,E,18,[[["self"]],[T]]],[11,R[42],E,E,18,[[["self"]],[R[46]]]],[11,R[40],E,E,18,[[["self"]],[T]]],[11,R[41],E,E,18,[[],[R[37]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[39],E,E,19,[[[U]],[R[37]]]],[11,R[45],E,E,19,[[["self"]],[T]]],[11,R[42],E,E,19,[[["self"]],[R[46]]]],[11,R[40],E,E,19,[[["self"]],[T]]],[11,R[41],E,E,19,[[],[R[37]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[39],E,E,20,[[[U]],[R[37]]]],[11,R[45],E,E,20,[[["self"]],[T]]],[11,R[42],E,E,20,[[["self"]],[R[46]]]],[11,R[40],E,E,20,[[["self"]],[T]]],[11,R[41],E,E,20,[[],[R[37]]]],[11,"from",R[55],E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[39],E,E,22,[[[U]],[R[37]]]],[11,R[45],E,E,22,[[["self"]],[T]]],[11,R[42],E,E,22,[[["self"]],[R[46]]]],[11,R[40],E,E,22,[[["self"]],[T]]],[11,R[41],E,E,22,[[],[R[37]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[39],E,E,23,[[[U]],[R[37]]]],[11,R[45],E,E,23,[[["self"]],[T]]],[11,R[42],E,E,23,[[["self"]],[R[46]]]],[11,R[40],E,E,23,[[["self"]],[T]]],[11,R[41],E,E,23,[[],[R[37]]]],[11,"from",R[56],E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[39],E,E,24,[[[U]],[R[37]]]],[11,R[45],E,E,24,[[["self"]],[T]]],[11,R[42],E,E,24,[[["self"]],[R[46]]]],[11,R[40],E,E,24,[[["self"]],[T]]],[11,R[41],E,E,24,[[],[R[37]]]],[11,"K",R[49],E,32,[[],[R[7]]]],[11,"K",E,E,33,[[],[R[7]]]],[11,"K",E,E,34,[[],[R[7]]]],[11,"K",E,E,35,[[],[R[7]]]],[11,"K",E,E,36,[[],[R[7]]]],[11,"K",E,E,37,[[],[R[7]]]],[11,"K",E,E,38,[[],[R[7]]]],[11,"K",E,E,39,[[],[R[7]]]],[11,"K",E,E,40,[[],[R[7]]]],[11,"K",E,E,41,[[],[R[7]]]],[11,"K",E,E,42,[[],[R[7]]]],[11,"K",E,E,43,[[],[R[7]]]],[11,R[57],R[54],E,18,[[[R[21]],["self"]]]],[11,R[57],E,E,19,[[[R[21]],["self"]]]],[11,R[57],E,E,20,[[[R[21]],["self"]]]],[11,"reduce",R[55],E,22,[[["d"],["self"],["d"]],["d"]]],[11,R[58],E,E,22,[[["d"],["self"]],["bool"]]],[11,"reduce",E,E,23,[[["d"],["self"],["d"]],["d"]]],[11,R[58],E,E,23,[[["d"],["self"]],["bool"]]],[11,"len",R[49],E,4,[[["self"]],[R[7]]]],[11,"get",E,R[60],4,[[["self"],[R[7]]],["u8"]]],[11,R[61],E,E,4,[[["self"],["u8"],[R[7]]]]],[11,R[59],E,R[62],4,[[["self"],["u64"],[R[7]]]]],[11,"rc",E,R[63],4,[[["self"]],["self"]]],[11,"len",E,E,5,[[["self"]],[R[7]]]],[11,"get",E,R[60],5,[[["self"],[R[7]]],["u8"]]],[11,R[61],E,E,5,[[["self"],["u8"],[R[7]]]]],[11,R[59],E,R[62],5,[[["self"],["u64"],[R[7]]]]],[11,"rc",E,R[63],5,[[["self"]],["self"]]],[11,"len",R[50],E,10,[[["self"]],[R[7]]]],[11,"get",E,R[315],10,[[["self"],[R[7]]],["u8"]]],[11,R[61],E,R[316],10,[[["self"],["u8"],[R[7]]]]],[11,R[59],E,E,10,[[["self"],["u64"],[R[7]]]]],[11,"rc",E,E,10,[[["self"]],[R[10]]]],[11,"len",E,E,8,[[["self"]],[R[7]]]],[11,"get",E,R[317],8,[[["self"],[R[7]]],["u8"]]],[11,R[61],E,R[318],8,[[["self"],["u8"],[R[7]]]]],[11,R[59],E,E,8,[[["self"],["u64"],[R[7]]]]],[11,"rc",E,E,8,[[["self"]],[R[12]]]],[11,"len",R[52],R[319],48,[[["self"]],[R[7]]]],[11,"get",E,R[320],48,[[["self"],[R[7]]],["u8"]]],[11,R[61],E,R[321],48,[[["self"],["u8"],[R[7]]]]],[11,R[59],E,E,48,[[["self"],["u64"],[R[7]]]]],[11,"rc",E,E,48,[[["self"]],["self"]]],[11,"len",R[0],E,0,[[["self"]],[R[7]]]],[11,"get",E,E,0,[[["self"],[R[7]]],["u8"]]],[11,R[61],E,R[64],0,[[["self"],["u8"],[R[7]]]]],[11,R[59],E,R[65],0,[[["self"],["u64"],[R[7]]]]],[11,"rc",E,R[66],0,[[["self"]],["self"]]],[11,"len",E,E,1,[[["self"]],[R[7]]]],[11,"get",E,E,1,[[["self"],[R[7]]],["u8"]]],[11,R[61],E,R[64],1,[[["self"],["u8"],[R[7]]]]],[11,R[59],E,R[65],1,[[["self"],["u64"],[R[7]]]]],[11,"rc",E,R[66],1,[[["self"]],["self"]]],[11,"empty",R[49],E,4,[[],["self"]]],[11,"k",E,E,4,[[],[R[7]]]],[11,R[67],E,E,4,[[["u64"]],[R[77]]]],[11,"to_u64",E,E,4,[[["self"]],["u64"]]],[11,R[68],E,R[70],4,[[["u8"],["self"]],["self"]]],[11,R[69],E,E,4,[[["u8"],["self"]],["self"]]],[11,"empty",E,E,5,[[],["self"]]],[11,"k",E,E,5,[[],[R[7]]]],[11,"to_u64",E,E,5,[[["self"]],["u64"]]],[11,R[67],E,E,5,[[["u64"]],["self"]]],[11,R[68],E,R[70],5,[[["u8"],["self"]],["self"]]],[11,R[69],E,E,5,[[["u8"],["self"]],["self"]]],[11,"new",R[50],E,10,[[[R[7]]],["self"]]],[11,R[72],E,E,10,[[],[R[7]]]],[11,R[71],E,R[73],10,[[["self"],[R[7]]],["kmer"]]],[11,"new",E,E,8,[[[R[7]]],["self"]]],[11,R[72],E,E,8,[[],[R[7]]]],[11,R[71],E,R[73],8,[[["self"],[R[7]]],["kmer"]]],[11,R[72],R[52],E,48,[[],[R[7]]]],[11,"new",E,R[322],48,[[[R[7]]],["lmer"]]],[11,R[71],E,R[73],48,[[["self"],[R[7]]],["kmer"]]],[11,"new",R[0],R[74],0,[[[R[7]]],["self"]]],[11,R[72],E,R[75],0,[[],[R[7]]]],[11,R[71],E,R[76],0,[[["self"],[R[7]]],["kmer"]]],[11,"new",E,R[74],1,[[[R[7]]],["self"]]],[11,R[72],E,R[75],1,[[],[R[7]]]],[11,R[71],E,R[76],1,[[["self"],[R[7]]],["kmer"]]],[11,"eq",R[49],E,4,[[[R[77]],["self"]],["bool"]]],[11,"ne",E,E,4,[[[R[77]],["self"]],["bool"]]],[11,"eq",E,E,5,[[[R[78]],["self"]],["bool"]]],[11,"ne",E,E,5,[[[R[78]],["self"]],["bool"]]],[11,"eq",E,E,32,[[["k48"],["self"]],["bool"]]],[11,"eq",E,E,33,[[["self"],["k40"]],["bool"]]],[11,"eq",E,E,34,[[["self"],["k30"]],["bool"]]],[11,"eq",E,E,35,[[["self"],["k24"]],["bool"]]],[11,"eq",E,E,36,[[["self"],["k20"]],["bool"]]],[11,"eq",E,E,37,[[["k14"],["self"]],["bool"]]],[11,"eq",E,E,38,[[["k12"],["self"]],["bool"]]],[11,"eq",E,E,39,[[["self"],["k6"]],["bool"]]],[11,"eq",E,E,40,[[["k5"],["self"]],["bool"]]],[11,"eq",E,E,41,[[["k4"],["self"]],["bool"]]],[11,"eq",E,E,42,[[["self"],["k3"]],["bool"]]],[11,"eq",E,E,43,[[["k2"],["self"]],["bool"]]],[11,"eq",R[50],E,10,[[[R[10]],["self"]],["bool"]]],[11,"ne",E,E,10,[[[R[10]],["self"]],["bool"]]],[11,"eq",E,E,8,[[[R[12]],["self"]],["bool"]]],[11,"eq",R[52],E,48,[[["self"],["lmer"]],["bool"]]],[11,"ne",E,E,48,[[["self"],["lmer"]],["bool"]]],[11,"eq",R[0],E,0,[[[R[79]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[79]],["self"]],["bool"]]],[11,"eq",E,E,1,[[[R[80]],["self"]],["bool"]]],[11,"ne",E,E,1,[[[R[80]],["self"]],["bool"]]],[11,"eq",E,E,2,[[["exts"],["self"]],["bool"]]],[11,"ne",E,E,2,[[["exts"],["self"]],["bool"]]],[11,"clone",R[49],E,4,[[["self"]],[R[77]]]],[11,"clone",E,E,5,[[["self"]],[R[78]]]],[11,"clone",E,E,32,[[["self"]],["k48"]]],[11,"clone",E,E,33,[[["self"]],["k40"]]],[11,"clone",E,E,34,[[["self"]],["k30"]]],[11,"clone",E,E,35,[[["self"]],["k24"]]],[11,"clone",E,E,36,[[["self"]],["k20"]]],[11,"clone",E,E,37,[[["self"]],["k14"]]],[11,"clone",E,E,38,[[["self"]],["k12"]]],[11,"clone",E,E,39,[[["self"]],["k6"]]],[11,"clone",E,E,40,[[["self"]],["k5"]]],[11,"clone",E,E,41,[[["self"]],["k4"]]],[11,"clone",E,E,42,[[["self"]],["k3"]]],[11,"clone",E,E,43,[[["self"]],["k2"]]],[11,"clone",R[50],E,10,[[["self"]],[R[10]]]],[11,"clone",E,E,8,[[["self"]],[R[12]]]],[11,"clone",E,E,9,[[["self"]],[R[323]]]],[11,"clone",R[51],E,11,[[["self"]],[R[31]]]],[11,"clone",E,E,13,[[["self"]],["nodekmer"]]],[11,"clone",R[52],E,48,[[["self"]],["lmer"]]],[11,"clone",R[0],E,0,[[["self"]],[R[79]]]],[11,"clone",E,E,3,[[["self"]],["dir"]]],[11,"clone",E,E,2,[[["self"]],["exts"]]],[11,"cmp",R[49],E,4,[[[R[77]],["self"]],[R[81]]]],[11,"cmp",E,E,5,[[[R[78]],["self"]],[R[81]]]],[11,"cmp",E,E,32,[[["k48"],["self"]],[R[81]]]],[11,"cmp",E,E,33,[[["self"],["k40"]],[R[81]]]],[11,"cmp",E,E,34,[[["self"],["k30"]],[R[81]]]],[11,"cmp",E,E,35,[[["self"],["k24"]],[R[81]]]],[11,"cmp",E,E,36,[[["self"],["k20"]],[R[81]]]],[11,"cmp",E,E,37,[[["k14"],["self"]],[R[81]]]],[11,"cmp",E,E,38,[[["k12"],["self"]],[R[81]]]],[11,"cmp",E,E,39,[[["self"],["k6"]],[R[81]]]],[11,"cmp",E,E,40,[[["k5"],["self"]],[R[81]]]],[11,"cmp",E,E,41,[[["k4"],["self"]],[R[81]]]],[11,"cmp",E,E,42,[[["self"],["k3"]],[R[81]]]],[11,"cmp",E,E,43,[[["k2"],["self"]],[R[81]]]],[11,"cmp",R[50],E,10,[[[R[10]],["self"]],[R[81]]]],[11,"cmp",R[52],E,48,[[["self"],["lmer"]],[R[81]]]],[11,"cmp",R[0],E,0,[[[R[79]],["self"]],[R[81]]]],[11,"cmp",E,E,1,[[[R[80]],["self"]],[R[81]]]],[11,"cmp",E,E,2,[[["exts"],["self"]],[R[81]]]],[11,R[44],R[51],E,13,[[]]],[11,R[82],R[49],E,4,[[[R[77]],["self"]],[[R[81]],[R[20],[R[81]]]]]],[11,"lt",E,E,4,[[[R[77]],["self"]],["bool"]]],[11,"le",E,E,4,[[[R[77]],["self"]],["bool"]]],[11,"gt",E,E,4,[[[R[77]],["self"]],["bool"]]],[11,"ge",E,E,4,[[[R[77]],["self"]],["bool"]]],[11,R[82],E,E,5,[[[R[78]],["self"]],[[R[81]],[R[20],[R[81]]]]]],[11,"lt",E,E,5,[[[R[78]],["self"]],["bool"]]],[11,"le",E,E,5,[[[R[78]],["self"]],["bool"]]],[11,"gt",E,E,5,[[[R[78]],["self"]],["bool"]]],[11,"ge",E,E,5,[[[R[78]],["self"]],["bool"]]],[11,R[82],E,E,32,[[["k48"],["self"]],[[R[81]],[R[20],[R[81]]]]]],[11,R[82],E,E,33,[[["self"],["k40"]],[[R[81]],[R[20],[R[81]]]]]],[11,R[82],E,E,34,[[["self"],["k30"]],[[R[81]],[R[20],[R[81]]]]]],[11,R[82],E,E,35,[[["self"],["k24"]],[[R[81]],[R[20],[R[81]]]]]],[11,R[82],E,E,36,[[["self"],["k20"]],[[R[81]],[R[20],[R[81]]]]]],[11,R[82],E,E,37,[[["k14"],["self"]],[[R[81]],[R[20],[R[81]]]]]],[11,R[82],E,E,38,[[["k12"],["self"]],[[R[81]],[R[20],[R[81]]]]]],[11,R[82],E,E,39,[[["self"],["k6"]],[[R[81]],[R[20],[R[81]]]]]],[11,R[82],E,E,40,[[["k5"],["self"]],[[R[81]],[R[20],[R[81]]]]]],[11,R[82],E,E,41,[[["k4"],["self"]],[[R[81]],[R[20],[R[81]]]]]],[11,R[82],E,E,42,[[["self"],["k3"]],[[R[81]],[R[20],[R[81]]]]]],[11,R[82],E,E,43,[[["k2"],["self"]],[[R[81]],[R[20],[R[81]]]]]],[11,R[82],R[50],E,10,[[[R[10]],["self"]],[[R[81]],[R[20],[R[81]]]]]],[11,"lt",E,E,10,[[[R[10]],["self"]],["bool"]]],[11,"le",E,E,10,[[[R[10]],["self"]],["bool"]]],[11,"gt",E,E,10,[[[R[10]],["self"]],["bool"]]],[11,"ge",E,E,10,[[[R[10]],["self"]],["bool"]]],[11,R[82],R[52],E,48,[[["self"],["lmer"]],[[R[81]],[R[20],[R[81]]]]]],[11,"lt",E,E,48,[[["self"],["lmer"]],["bool"]]],[11,"le",E,E,48,[[["self"],["lmer"]],["bool"]]],[11,"gt",E,E,48,[[["self"],["lmer"]],["bool"]]],[11,"ge",E,E,48,[[["self"],["lmer"]],["bool"]]],[11,R[82],R[0],E,0,[[[R[79]],["self"]],[[R[81]],[R[20],[R[81]]]]]],[11,"lt",E,E,0,[[[R[79]],["self"]],["bool"]]],[11,"le",E,E,0,[[[R[79]],["self"]],["bool"]]],[11,"gt",E,E,0,[[[R[79]],["self"]],["bool"]]],[11,"ge",E,E,0,[[[R[79]],["self"]],["bool"]]],[11,R[82],E,E,1,[[[R[80]],["self"]],[[R[81]],[R[20],[R[81]]]]]],[11,"lt",E,E,1,[[[R[80]],["self"]],["bool"]]],[11,"le",E,E,1,[[[R[80]],["self"]],["bool"]]],[11,"gt",E,E,1,[[[R[80]],["self"]],["bool"]]],[11,"ge",E,E,1,[[[R[80]],["self"]],["bool"]]],[11,R[82],E,E,2,[[["exts"],["self"]],[[R[81]],[R[20],[R[81]]]]]],[11,"lt",E,E,2,[[["exts"],["self"]],["bool"]]],[11,"le",E,E,2,[[["exts"],["self"]],["bool"]]],[11,"gt",E,E,2,[[["exts"],["self"]],["bool"]]],[11,"ge",E,E,2,[[["exts"],["self"]],["bool"]]],[11,"next",R[50],E,44,[[["self"]],[["u8"],[R[20],["u8"]]]]],[11,"next",R[51],E,45,[[["self"]],[[R[20],["node"]],["node"]]]],[11,"next",E,E,46,[[["self"]],[R[20]]]],[11,"next",E,E,47,[[["self"]],[R[20]]]],[11,R[324],E,E,47,[[["self"]]]],[11,"nth",E,R[325],47,[[["self"],[R[7]]],[R[20]]]],[11,"next",R[0],E,29,[[["self"]],[["u8"],[R[20],["u8"]]]]],[11,"next",E,E,30,[[["self"]],[R[20]]]],[11,"next",E,E,31,[[["self"]],[R[20]]]],[11,"fmt",R[49],E,4,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,5,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,32,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,33,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,34,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,35,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,36,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,37,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,38,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,39,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,40,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,41,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,42,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,43,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",R[50],E,10,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,8,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,9,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",R[51],E,11,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,12,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,14,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",R[52],E,48,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",R[53],E,16,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",R[0],E,0,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,1,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,3,[[[R[83]],["self"]],[R[37]]]],[11,"fmt",E,E,2,[[[R[83]],["self"]],[R[37]]]],[11,"hash",R[49],E,4,[[["self"],["__ht"]]]],[11,"hash",E,E,5,[[["__htks"],["self"]]]],[11,"hash",E,E,32,[[["self"],["__h"]]]],[11,"hash",E,E,33,[[["self"],["__h"]]]],[11,"hash",E,E,34,[[["self"],["__h"]]]],[11,"hash",E,E,35,[[["self"],["__h"]]]],[11,"hash",E,E,36,[[["self"],["__h"]]]],[11,"hash",E,E,37,[[["self"],["__h"]]]],[11,"hash",E,E,38,[[["self"],["__h"]]]],[11,"hash",E,E,39,[[["self"],["__h"]]]],[11,"hash",E,E,40,[[["self"],["__h"]]]],[11,"hash",E,E,41,[[["self"],["__h"]]]],[11,"hash",E,E,42,[[["self"],["__h"]]]],[11,"hash",E,E,43,[[["self"],["__h"]]]],[11,"hash",R[50],E,10,[[["self"],["__h"]]]],[11,"hash",R[52],E,48,[[["__ha"],["self"]]]],[11,"hash",R[0],E,2,[[["self"],["__h"]]]],[11,R[84],R[49],E,4,[[["__s"],["self"]],[R[37]]]],[11,R[84],E,E,5,[[["__s"],["self"]],[R[37]]]],[11,R[84],R[50],E,10,[[["__s"],["self"]],[R[37]]]],[11,R[84],E,E,9,[[["__s"],["self"]],[R[37]]]],[11,R[84],R[51],E,11,[[["__s"],["self"]],[R[37]]]],[11,R[84],E,E,12,[[["__s"],["self"]],[R[37]]]],[11,R[84],R[52],E,48,[[["__s"],["self"]],[R[37]]]],[11,R[84],R[0],E,3,[[["__s"],["self"]],[R[37]]]],[11,R[84],E,E,2,[[["__s"],["self"]],[R[37]]]],[11,R[85],R[49],E,4,[[["__d"]],[R[37]]]],[11,R[85],E,E,5,[[["__d"]],[R[37]]]],[11,R[85],R[50],E,10,[[["__d"]],[R[37]]]],[11,R[85],E,E,9,[[["__d"]],[R[37]]]],[11,R[85],R[51],E,11,[[["__d"]],[R[37]]]],[11,R[85],E,E,12,[[["__d"]],[R[37]]]],[11,R[85],R[52],E,48,[[["__d"]],[R[37]]]],[11,R[85],R[0],E,3,[[["__d"]],[R[37]]]],[11,R[85],E,E,2,[[["__d"]],[R[37]]]]],"p":[[3,R[86]],[3,R[87]],[3,"Exts"],[4,"Dir"],[3,"IntKmer"],[3,R[88]],[8,"IntHelp"],[8,R[89]],[3,R[90]],[3,R[91]],[3,R[92]],[3,R[93]],[3,R[94]],[3,R[95]],[3,"Node"],[8,"Array"],[3,R[96]],[8,R[97]],[3,R[98]],[3,R[99]],[3,R[100]],[8,R[101]],[3,R[102]],[3,R[103]],[3,R[104]],[8,"Mer"],[8,"Kmer"],[8,R[284]],[8,"Vmer"],[3,"MerIter"],[3,R[114]],[3,R[105]],[3,"K48"],[3,"K40"],[3,"K30"],[3,"K24"],[3,"K20"],[3,"K14"],[3,"K12"],[3,"K6"],[3,"K5"],[3,"K4"],[3,"K3"],[3,"K2"],[3,R[106]],[3,R[181]],[3,R[107]],[3,R[108]],[3,"Lmer"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);